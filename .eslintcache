[{"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\api\\index.js":"1","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\App.js":"2","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\WatchCourse\\index.js":"3","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js":"4","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js":"5","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js":"6","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\assets\\images\\index.js":"7","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js":"8","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js":"9","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js":"10","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js":"11","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ChangePassword\\index.js":"12","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js":"13","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js":"14","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\index.js":"15","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js":"16","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\AddCourseInput\\index.js":"17"},{"size":2955,"mtime":1612446005903,"results":"18","hashOfConfig":"19"},{"size":2833,"mtime":1612446361405,"results":"20","hashOfConfig":"19"},{"size":5238,"mtime":1612446006087,"results":"21","hashOfConfig":"19"},{"size":13481,"mtime":1611926728178,"results":"22","hashOfConfig":"19"},{"size":869,"mtime":1611915703485,"results":"23","hashOfConfig":"19"},{"size":3320,"mtime":1612281383183,"results":"24","hashOfConfig":"19"},{"size":1208,"mtime":1612262469663,"results":"25","hashOfConfig":"19"},{"size":1473,"mtime":1612355920376,"results":"26","hashOfConfig":"19"},{"size":621,"mtime":1611847110601,"results":"27","hashOfConfig":"19"},{"size":1294,"mtime":1612446006105,"results":"28","hashOfConfig":"19"},{"size":1759,"mtime":1612446005930,"results":"29","hashOfConfig":"19"},{"size":1501,"mtime":1612446005921,"results":"30","hashOfConfig":"19"},{"size":3386,"mtime":1612446579267,"results":"31","hashOfConfig":"19"},{"size":12617,"mtime":1612452546130,"results":"32","hashOfConfig":"19"},{"size":403,"mtime":1612274607584,"results":"33","hashOfConfig":"19"},{"size":250,"mtime":1611920496847,"results":"34","hashOfConfig":"19"},{"size":507,"mtime":1611838625204,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"rsinsr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\api\\index.js",[],["75","76"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\App.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\WatchCourse\\index.js",["77","78","79"],"import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ActiveCircle } from \"../../../assets/images\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport { getLessons } from \"../../../api\";\r\nimport \"./WatchCourse.css\";\r\n// import { CoursePlayer } from \"../../../widgets/CoursePlayer\";\r\n\r\nfunction WatchCourse() {\r\n\tconst [numToggle, setNumToggle] = useState(1);\r\n\tconst [courses, setCourses] = useState([]);\r\n\tconst [coursePreview, setCoursePreview] = useState(<h1> h1 </h1>);\r\n\tconst [singleCourse, setSingleCourse] = useState({});\r\n\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet targetText = e.target.innerText;\r\n\t\ttargetText === \"Review\" ? setNumToggle(1) : setNumToggle(0);\r\n\t\tconsole.log(targetText);\r\n\t};\r\n\r\n\t// Get Url Parameters\r\n\tconst url_string = window.location.href;\r\n\tconst url = new URL(url_string);\r\n\tconst course_id = url.searchParams.get(\"id\");\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLessons(courses, setCourses, course_id);\r\n\t}, []);\r\n\r\n\tconsole.log(courses);\r\n\r\n\tconst handleCurrentlyPlaying = (e) => {\r\n\t\tconst key = e.target.key;\r\n\t\tkey !== courses._id\r\n\t\t\t? console.log(\"hello\")\r\n\t\t\t: setCoursePreview(\r\n\t\t\t\t\t<div className=\"main-view-img d-flex justify-content-center align-items-center\">\r\n\t\t\t\t\t\t<ReactPlayer\r\n\t\t\t\t\t\t\tclassName=\"react-player\"\r\n\t\t\t\t\t\t\turl={`https://res.cloudinary.com/codeangelic/video/upload/v1611738487/cerebrum/lessons/ce7tmefwhlbaxc0udku0.mp4`}\r\n\t\t\t\t\t\t\tplaying={true}\r\n\t\t\t\t\t\t\tcontrols={true}\r\n\t\t\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t  );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DashboardHeader />\r\n\t\t\t<main className=\"container pb-5\">\r\n\t\t\t\t<h1 className=\"fw-bold\"> {}</h1>\r\n\t\t\t\t<p> by Lil Kim </p>\r\n\t\t\t\t<section className=\"d-lg-flex flex-lg-row flex-md-column flex-sm-column justify-content-between\">\r\n\t\t\t\t\t<section className=\"col-lg-7 col-md-12 col-sm-12\">\r\n\t\t\t\t\t\t{coursePreview}\r\n\t\t\t\t\t\t<div className=\"w-100 shadow-lg\">\r\n\t\t\t\t\t\t\t<div className=\"shadow bg-white rounded d-flex flex-row w-100 mt-2 mb-1\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={`btn w-50 text-center p-3 ${numToggle === 0 ? \"add-border-bottom\" : \"\"}`}\r\n\t\t\t\t\t\t\t\t\ttext=\"About Course\"\r\n\t\t\t\t\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName={`btn w-50 text-center p-3 ${numToggle === 1 ? \"add-border-bottom\" : \"\"}`}\r\n\t\t\t\t\t\t\t\t\ttext=\"Review\"\r\n\t\t\t\t\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{numToggle === 1 ? (\r\n\t\t\t\t\t\t\t\t\t<form className=\"d-flex flex-column watchcourse-form\">\r\n\t\t\t\t\t\t\t\t\t\t<textarea className=\"mt-3 mb-3 rounded watchcourse-textarea p-2\" placeholder=\"Type here\" rows=\"10\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-5 d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block m-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn watchcourse-cancel-btn\">Cancel</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block m-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn watchcourse-send-btn\">Send</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"p-4\">\r\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"h5 pb-2 fw-bold\">About This Course</h1>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"signup-p\">\r\n\t\t\t\t\t\t\t\t\t\t\tLooking to Learn Product Design, but dont know where to start? Get to know the basic principles of Design in this fun and\r\n\t\t\t\t\t\t\t\t\t\t\tcomprehensive course. <br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\tJoin Osita Ikeme, an illustrator and a Product Design known for his iconic design style and analog approach to design thinking,\r\n\t\t\t\t\t\t\t\t\t\t\tfor an introduction to Product design that goes beyond creating beautiful designs and walk cycles to inspire the design in you.\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\tOsitaâ€™s holistic approach to design will help you understand the foundational principles of effective design in addition to the\r\n\t\t\t\t\t\t\t\t\t\t\ttechnical skills every designer needs to know. From understanding contrast and emphasis to an organized design process, youâ€™ll\r\n\t\t\t\t\t\t\t\t\t\t\tfollow along with every step of Ositaâ€™s tried and true process, creating a dancing character as you go. <br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t<section className=\"m-sm-0 col-lg-4 col-md-12 col-sm-12 p-1 shadow-lg watchcourse-aside overflow-auto\">\r\n\t\t\t\t\t\t<aside className=\"my-3\">\r\n\t\t\t\t\t\t\t{courses.map((lesson) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={handleCurrentlyPlaying}\r\n\t\t\t\t\t\t\t\t\tkey={lesson._id}\r\n\t\t\t\t\t\t\t\t\tclassName=\"lessons-hover d-flex justify-content-between align-items-center px-3 py-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"mini-view-img\">\r\n\t\t\t\t\t\t\t\t\t\t<ReactPlayer className=\"react-player mini-view-img\" url={lesson.video_url} width=\"100%\" height=\"100%\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<p className=\"signup-p col-4\">\r\n\t\t\t\t\t\t\t\t\t\t<strong> {lesson.name} </strong>\r\n\t\t\t\t\t\t\t\t\t\t<br /> {lesson.description}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<img src={ActiveCircle} className=\"circle\" alt=\"circle\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</aside>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport { WatchCourse };\r\n",["80","81"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js",["82"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\assets\\images\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js",["83"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js",[],["84","85"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ChangePassword\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js",["86","87","88","89","90"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js",["91","92","93","94","95","96","97"],"/** @format */\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  dashAvater,\r\n  dashboardImg,\r\n  dashImg,\r\n  ellipsesvg1,\r\n  ellipsesvg2,\r\n} from \"../../../assets/images\";\r\nimport { CourseList } from \"../../../components/CourseList\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./TDashboard.css\";\r\nimport axios from \"axios\";\r\n\r\n// Api Call to get Authorized User\r\n\r\nconst TDashboard = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [role, setRole] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // const [dashimage, setDashimage] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  const [courseCount, setCourseCount] = useState(0);\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"userDetails\");\r\n    if (!data) {\r\n      window.open(\"/login\", \"_self\");\r\n    }\r\n    const user = JSON.parse(data);\r\n    const token = user.data.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    };\r\n    const userId = user.data.uid;\r\n    axios\r\n      .get(`https://cerebrum-v1.herokuapp.com/api/user/${userId}`, config)\r\n      .then((res) => {\r\n        console.log(\"res value\", res.data);\r\n        setUser(res.data.data);\r\n        setRole(res.data.data.role);\r\n      })\r\n      .catch((err) => {\r\n        window.open(\"/login\", \"_self\");\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.role === \"tutor\") {\r\n      // console.log(user);\r\n      axios\r\n        .get(`https://cerebrum-v1.herokuapp.com/api/tutor/course/${user._id}`)\r\n        .then((res) => {\r\n          setCourseCount(res.data.data.length);\r\n          setCourses(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <section className='container container-fluid tdashboard'>\r\n        <div\r\n          className='row shadow mx-auto mt-4'\r\n          style={{\r\n            width: \"80%\",\r\n            borderRadius: \"15px\",\r\n          }}\r\n        >\r\n          <div className='col-md-8 align-items-center'>\r\n            <div className='card p-5 border-0'>\r\n              <div className='container'>\r\n                <header>\r\n                  <h1 className='font-bold'>Welcome {user.firstName}</h1>\r\n                </header>\r\n                <article>\r\n                  Welcome to your cerebrum Dashboard. Cerebrum provides you with\r\n                  boundless access to courses if you are a student and An\r\n                  opportunity to earn as a tutor\r\n                </article>\r\n                <div className='d-flex flex-wrap justify-content-start my-3'>\r\n                  {role === \"tutor\" ? (\r\n                    <>\r\n                      <button className='btn-primary text-light'>\r\n                        <Link\r\n                          to='/dashboard/tutor/addcourse'\r\n                          style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Add Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn-outline-primary'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          style={{\r\n                            color: \"var(--primary-color)\",\r\n                            textDecoration: \"none\",\r\n                          }}\r\n                          // onMouseOver={}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <button className='btn btn-primary text-light'>\r\n                        <Link\r\n                          to='/courses'\r\n                          style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Buy Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn btn-outline-primary text-light'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className='col-md-4 align-items-center'> */}\r\n\r\n          <div className='col-4 d-none d-md-block d-flex align-items-center mt-5'>\r\n            <img\r\n              src={dashImg}\r\n              className='bg-warning rounded-circle shadow img-fluid'\r\n              alt='cerebrum'\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <section className='row my-4 mx-auto mt-5 gx-5 container'>\r\n          {role === \"learner\" ? (\r\n            <div className='col-md-6 card p-5 shadow mb-sm-5'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-md-6'>\r\n                  <img src={dashboardImg} alt='' />\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <h1 className='font-bold'>Code 101: Codeology</h1>\r\n                  <p>By {user.lastName}</p>\r\n                  <p>\r\n                    Lorem ipsum, or lipsum as it is sometimes known, is dummy\r\n                    text used in laying out print, graphic or web designs.\r\n                  </p>\r\n                  <p>\r\n                    <button className='btn-warning text-light'>\r\n                      Continue Course\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className='col-md-6 card py-5 shadow'>\r\n              {courses.length > 0 ? (\r\n                <>\r\n                  <div className='row align-items-center'>\r\n                    {courses.map((course, index) => (\r\n                      <>\r\n                        <CourseList\r\n                          courseName={course.name}\r\n                          courseDesc={course.description}\r\n                          courseImg={course.image_url}\r\n                          key={index}\r\n                        />\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className='d-flex align-items-center justify-content-center mt-5'>\r\n                    <h1>No Courses Uploaded Yet</h1>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n          {/* <div className='col-md-1'>&nbsp;</div> */}\r\n          <div className='col-md-6'>\r\n            {/* metrics d-flex flex-wrap flex-column */}\r\n            {role === \"tutor\" ? (\r\n              <>\r\n                {/* Render If Role is Tutor */}\r\n                <div className='card py-4 h-60 shadow mb-3'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      {/* mx-auto justify-items-between */}\r\n                      <div className='col-md-6'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No of Course Uploaded</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex justify-content-center align-item-center'>\r\n                          <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card p-4 h-60 shadow'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div>\r\n                          {role === \"tutor\" || courses.length > 0 ? (\r\n                            <>\r\n                              <h1\r\n                                style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                                className='text-primary text-center'\r\n                              >\r\n                                {courses.length}\r\n                              </h1>\r\n                              <p className='text-center'>Courses Uploaded</p>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {/* Render if role is Student */}\r\n                              <h1\r\n                                style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                                className='text-primary text-center'\r\n                              >\r\n                                {courses.length}\r\n                              </h1>\r\n                              <p className='text-center'>\r\n                                No Student Registered Yet\r\n                              </p>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className='card py-4 h-60 shadow mb-3'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      {/* mx-auto justify-items-between */}\r\n                      <div className='col-md-6'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No Course Enrolled Yet</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card p-4 h-60 shadow'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No Course Completed Yet</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n  // } else {\r\n  // return <Redirect to='/login' />;\r\n  // }\r\n};\r\nexport { TDashboard };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\AddCourseInput\\index.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":16,"column":9,"nodeType":"104","messageId":"105","endLine":16,"endColumn":21},{"ruleId":"102","severity":1,"message":"106","line":16,"column":23,"nodeType":"104","messageId":"105","endLine":16,"endColumn":38},{"ruleId":"107","severity":1,"message":"108","line":32,"column":5,"nodeType":"109","endLine":32,"endColumn":7,"suggestions":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"100","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":328,"column":17,"nodeType":"115","endLine":328,"endColumn":75},{"ruleId":"102","severity":1,"message":"116","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":20},{"ruleId":"98","replacedBy":"117"},{"ruleId":"100","replacedBy":"118"},{"ruleId":"102","severity":1,"message":"119","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":19},{"ruleId":"102","severity":1,"message":"120","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":25},{"ruleId":"102","severity":1,"message":"121","line":11,"column":10,"nodeType":"104","messageId":"105","endLine":11,"endColumn":17},{"ruleId":"102","severity":1,"message":"122","line":11,"column":19,"nodeType":"104","messageId":"105","endLine":11,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":32,"column":27,"nodeType":"125","messageId":"126","endLine":32,"endColumn":29},{"ruleId":"102","severity":1,"message":"127","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":24},{"ruleId":"102","severity":1,"message":"116","line":5,"column":3,"nodeType":"104","messageId":"105","endLine":5,"endColumn":13},{"ruleId":"102","severity":1,"message":"128","line":22,"column":10,"nodeType":"104","messageId":"105","endLine":22,"endColumn":18},{"ruleId":"102","severity":1,"message":"129","line":22,"column":20,"nodeType":"104","messageId":"105","endLine":22,"endColumn":31},{"ruleId":"102","severity":1,"message":"130","line":25,"column":10,"nodeType":"104","messageId":"105","endLine":25,"endColumn":21},{"ruleId":"102","severity":1,"message":"131","line":26,"column":10,"nodeType":"104","messageId":"105","endLine":26,"endColumn":14},{"ruleId":"102","severity":1,"message":"132","line":26,"column":16,"nodeType":"104","messageId":"105","endLine":26,"endColumn":23},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'singleCourse' is assigned a value but never used.","Identifier","unusedVar","'setSingleCourse' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'course_id' and 'courses'. Either include them or remove the dependency array.","ArrayExpression",["135"],["133"],["134"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'dashAvater' is defined but never used.",["133"],["134"],"'FaWindows' is defined but never used.","'dummyVideoImage' is defined but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Redirect' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'courseCount' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [course_id, courses]",{"range":"138","text":"139"},[1150,1152],"[course_id, courses]"]