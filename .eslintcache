[{"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\auth\\EmailVerify\\index.js":"1","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\auth\\Login\\index.js":"2","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\index.js":"3","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\widgets\\DashboardHeader\\index.js":"4","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\app\\LandingPage\\index.js":"5","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\app\\AddCourses\\index.js":"6","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\widgets\\Footer\\index.js":"7","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\assets\\images\\index.js":"8","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\components\\Button\\index.js":"9"},{"size":1049,"mtime":1611918767078,"results":"10","hashOfConfig":"11"},{"size":3667,"mtime":1611918767078,"results":"12","hashOfConfig":"11"},{"size":728,"mtime":1611915082753,"results":"13","hashOfConfig":"11"},{"size":1283,"mtime":1611918767078,"results":"14","hashOfConfig":"11"},{"size":4115,"mtime":1611890324721,"results":"15","hashOfConfig":"11"},{"size":13463,"mtime":1611920912525,"results":"16","hashOfConfig":"11"},{"size":1666,"mtime":1611890324745,"results":"17","hashOfConfig":"11"},{"size":1224,"mtime":1611915458446,"results":"18","hashOfConfig":"11"},{"size":263,"mtime":1611890324697,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"52d2ze",{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\auth\\EmailVerify\\index.js",["44","45"],"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\auth\\Login\\index.js",["46","47","48","49","50","51"],"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\index.js",["52","53","54","55","56","57"],"/** @format */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport { AddCourses } from \"./pages/app/AddCourses\";\r\nimport { Dashboard } from \"./pages/app/Dashboard\";\r\nimport { DashboardHeader } from \"./widgets/DashboardHeader\";\r\nimport { Footer } from \"./widgets/Footer\";\r\nimport { EmailVerify } from \"./pages/auth/EmailVerify\";\r\nimport App from \"./components/App\";\r\nimport { LandingPage } from \"./pages/app/LandingPage\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["58","59"],"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\widgets\\DashboardHeader\\index.js",["60"],"/** @format */\r\n\r\nimport React from \"react\";\r\nimport { FaSearch, FaRegBell } from \"react-icons/fa\";\r\nimport { RiArrowDownSLine } from \"react-icons/ri\";\r\nimport { dashAvater, logo } from \"../../assets/images\";\r\nimport { Input } from \"../../components/Input\";\r\nimport \"./DashboardHeader.css\";\r\n\r\nfunction DashboardHeader(props) {\r\n  const dashimage = props.dashimage;\r\n  return (\r\n    <header className='py-4'>\r\n      <nav className='dash-nav-container container d-flex justify-content-between'>\r\n        <div className='dash-nav-logo'>\r\n          <img src={logo} alt='logo' />\r\n        </div>\r\n        <div className='dash-nav-items d-flex align-items-center'>\r\n          <h5>Courses</h5>\r\n          <Input className='mb-5' placeholder='Search' icon={<FaSearch />} />\r\n          <span id='dash-bell'>\r\n            <FaRegBell />\r\n          </span>\r\n          <div className='dash-user-icon d-flex'>\r\n            <img\r\n              src={dashimage}\r\n              alt='dash-avatar'\r\n              className='dashimage'\r\n              height='30'\r\n              width='30'\r\n            />\r\n            <span id='dash-toggle'>\r\n              <RiArrowDownSLine />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport { DashboardHeader };\r\n",["61","62"],"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\app\\LandingPage\\index.js",["63","64"],"import React from \"react\";\r\nimport {\r\n  landingPage1,\r\n  landingPage2,\r\n  landingPage3,\r\n} from \"../../../assets/images\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport { Header } from \"../../../widgets/Header/Index\";\r\nimport \"./LandingPage.css\";\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"landing-page pb-5\">\r\n        <section className=\"landing-page-a container-fluid ms-4 row\">\r\n          <div className=\"col-7 my-5 ps-5\">\r\n            <h1 className=\"fw-bold my-3\">\r\n              Knowledge <br /> <span>for everyone by everyone</span>\r\n            </h1>\r\n            <p className=\"my-4\">\r\n              Cerebrum offers quality online learning that is flexible and\r\n              inclusive for tutors and learners, which gives them a feeling of\r\n              self-accomplishment.{\" \"}\r\n            </p>\r\n            <Button\r\n              className=\"btn btn-primary my-5 border-2\"\r\n              text=\"Earn as a tutor\"\r\n            />\r\n            <Button\r\n              className=\"btn btn-outline-primary my-5 border-2\"\r\n              text=\"Access content as a learner\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-5\"\r\n            style={{\r\n              background: `url(${landingPage1})`,\r\n              backgroundRepeat: `no-repeat`,\r\n              backgroundSize: `cover`,\r\n            }}\r\n          ></div>\r\n        </section>\r\n        <section className=\"container landing-page-b d-flex justify-content-between my-5\">\r\n          <div className=\"card w-25 p-4 text-center shadow-lg\">\r\n            <h1>30k</h1>\r\n            <p>Tutors</p>\r\n          </div>\r\n          <div className=\"card w-25 p-4 text-center shadow-lg\">\r\n            <h1>100k</h1>\r\n            <p>Learners</p>\r\n          </div>\r\n          <div className=\"card w-25 p-4 text-center shadow-lg\">\r\n            <h1>500k</h1>\r\n            <p>Courses</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"container landing-page-c \">\r\n          <div className=\"d-flex justify-content-between row\">\r\n            <div className=\"col-6 align-self-center\">\r\n              <h1 className=\"fw-bold my-3\">Meet Qualified Tutors</h1>\r\n              <p className=\"mb-5\">\r\n                Our tutors master their subject matter, exhibit first-class\r\n                teaching skills, and possess a proven ability to connect with\r\n                you. We and our tutors are truly passionate about helping our\r\n                students succeed. It is what you can expect from our tutoring\r\n                services.\r\n              </p>\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                text=\"Access content as a learner\"\r\n              />\r\n            </div>\r\n            <div className=\"land-img-con-c col-6\">\r\n              <img src={landingPage2} alt=\"landing Image\" />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"container landing-page-d \">\r\n          <div className=\"d-flex justify-content-between row\">\r\n            <div className=\"land-img-con-d col-6\">\r\n              <img src={landingPage3} alt=\"landing Image\" />\r\n            </div>\r\n            <div className=\"col-6 align-self-center\">\r\n              <h1 className=\"fw-bold my-3\">Meet Verified Tutors</h1>\r\n              <p className=\"mb-5\">\r\n                We check the identity of every tutor who registers with Cerebum\r\n                and their content goes through various processes , tutors who\r\n                are listed as verified undergo an extra layer of verification.\r\n                Each verified tutor needs a minimum of 2 references publicly\r\n                available on their profile before they can start and get a blue\r\n                tick.\r\n              </p>\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                text=\"Access content as a learner\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { LandingPage };\r\n","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\pages\\app\\AddCourses\\index.js",["65"],"import React, { useState, useEffect } from \"react\";\r\nimport { AddCourseInput } from \"../../../components/AddCourseInput\";\r\nimport axios from \"axios\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./AddCourses.css\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { getCategories } from \"../../../api\";\r\nimport { dashboardImage } from \"../../../assets/images\";\r\nimport { Loader } from \"../../../components/Loader\";\r\n\r\nfunction AddCourses() {\r\n  const [toggle, setToggle] = useState({ one: true, two: false, three: false });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [courseImage, setCourseImage] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [form1, setForm1] = useState({\r\n    tutor_id: JSON.parse(localStorage.getItem(\"userDetails\")).data.uid,\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const [form2, setForm2] = useState({\r\n    course_id: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const [form3, setForm3] = useState({\r\n    course_id: \"\",\r\n    module_id: \"\",\r\n    name: \"\",\r\n    img: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    const name = event.target.className.baseVal || event.target.name;\r\n    setToggle({ ...toggle, [name]: !toggle[name] });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.files) {\r\n      let currentImg = event.target.name;\r\n      setForm1({ ...form1, [currentImg]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm1({ ...form1, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n\r\n  const handleChange2 = (event) => {\r\n    let currentInput = event.target.name;\r\n    setForm2({ ...form2, [currentInput]: event.target.value });\r\n  };\r\n\r\n  const handleChange3 = (event) => {\r\n    if (event.target.files) {\r\n      let currentVideo = event.target.name;\r\n      setForm3({ ...form3, [currentVideo]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm3({ ...form3, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n  useEffect(() => getCategories(setCategories), []);\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <main className=\"addcourse-page container\">\r\n        <h1>Add Course</h1>\r\n        <section className=\"card shadow py-5 px-4 mb-5\">\r\n          <div className=\"row col-12\">\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"addcourse-a\">\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Course Details</h2>\r\n                    <button name=\"one\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"one\",\r\n                        }}\r\n                      >\r\n                        {toggle.one ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"one\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form1.img);\r\n                        formData.append(\"description\", form1.description);\r\n                        formData.append(\"price\", form1.price);\r\n                        formData.append(\"category\", form1.category);\r\n                        formData.append(\"name\", form1.name);\r\n                        formData.append(\"tutor_id\", form1.tutor_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/course/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res.data.data);\r\n                            setCourseImage(res.data.data.image_url);\r\n                            setForm2({\r\n                              ...form2,\r\n                              course_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1.tutor_id));\r\n                      }}\r\n                      enctype=\"multipart/form-data\"\r\n                    >\r\n                      <label>Name of Course</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Enter course name\"\r\n                        name=\"name\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Course Description</label>\r\n                      <textarea\r\n                        className=\"form-control mb-3\"\r\n                        name=\"description\"\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter course description...\"\r\n                        rows=\"7\"\r\n                        disabled={loading}\r\n                      ></textarea>\r\n                      <label>Category</label>\r\n                      <select\r\n                        name=\"category\"\r\n                        onChange={handleChange}\r\n                        className=\"form-select mb-3\"\r\n                        aria-label=\"Default select example\"\r\n                        disabled={loading}\r\n                      >\r\n                        <option>Select course category</option>\r\n                        {categories.map((item) => (\r\n                          <option key={item._id} value={item.name}>\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <label>Cover Image</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Upload Image\"\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Price</label>\r\n                      <AddCourseInput\r\n                        type=\"text\"\r\n                        placeholder=\"Enter course price\"\r\n                        name=\"price\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        text=\"Save\"\r\n                        loadingIcon={loading && <Loader />}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          const userId = localStorage.getItem(\"userDetails\")\r\n                            .data.uid;\r\n                          console.log(userId);\r\n                        }}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Module</h2>\r\n                    <button name=\"two\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"two\",\r\n                        }}\r\n                      >\r\n                        {toggle.two ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"two\"] && (\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        console.log(form2);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/module/create\",\r\n                            form2\r\n                          )\r\n                          .then((res) => {\r\n                            setForm3({\r\n                              ...form3,\r\n                              course_id: form2.course_id,\r\n                              module_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          });\r\n                      }}\r\n                    >\r\n                      <label>Module</label>\r\n                      <AddCourseInput\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter module name\"\r\n                        onChange={handleChange2}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        loadingIcon={loading && <Loader />}\r\n                        text=\"Save\"\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Lesson</h2>\r\n                    <button name=\"three\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"three\",\r\n                        }}\r\n                      >\r\n                        {toggle.three ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"three\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form3.img);\r\n                        formData.append(\"description\", form3.description);\r\n                        formData.append(\"name\", form3.name);\r\n                        formData.append(\"course_id\", form3.course_id);\r\n                        formData.append(\"module_id\", form3.module_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/lesson/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res);\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1, form2, form3));\r\n                      }}\r\n                      enctype=\"multipart/form-data\"\r\n                    >\r\n                      <label>Lesson Name</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Enter lesson name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        disabled={loading}\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Video</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Upload Video\"\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        disabled={loading}\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Description</label>\r\n                      <textarea\r\n                        className=\"form-control mb-3\"\r\n                        placeholder=\"Enter lesson description\"\r\n                        rows=\"7\"\r\n                        name=\"description\"\r\n                        loading={loading}\r\n                        onChange={handleChange3}\r\n                      ></textarea>\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        text=\"Publish Course\"\r\n                        loadingIcon={loading && <Loader />}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"mt-4 addcourse-b col-5\">\r\n                <img src={courseImage || dashboardImage} alt=\"No Image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { AddCourses };\r\n","C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\widgets\\Footer\\index.js",[],"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\assets\\images\\index.js",["66"],"C:\\Users\\DELL\\Desktop\\Work\\Github\\cerebrum-new\\src\\components\\Button\\index.js",[],{"ruleId":"67","severity":1,"message":"68","line":3,"column":17,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":28,"column":6,"nodeType":"73","endLine":28,"endColumn":8,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":3,"column":17,"nodeType":"69","messageId":"70","endLine":3,"endColumn":26},{"ruleId":"67","severity":1,"message":"76","line":4,"column":16,"nodeType":"69","messageId":"70","endLine":4,"endColumn":26},{"ruleId":"67","severity":1,"message":"77","line":20,"column":10,"nodeType":"69","messageId":"70","endLine":20,"endColumn":18},{"ruleId":"67","severity":1,"message":"78","line":20,"column":20,"nodeType":"69","messageId":"70","endLine":20,"endColumn":31},{"ruleId":"67","severity":1,"message":"79","line":22,"column":10,"nodeType":"69","messageId":"70","endLine":22,"endColumn":15},{"ruleId":"67","severity":1,"message":"80","line":22,"column":17,"nodeType":"69","messageId":"70","endLine":22,"endColumn":25},{"ruleId":"67","severity":1,"message":"81","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":20},{"ruleId":"67","severity":1,"message":"82","line":9,"column":10,"nodeType":"69","messageId":"70","endLine":9,"endColumn":19},{"ruleId":"67","severity":1,"message":"83","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":25},{"ruleId":"67","severity":1,"message":"84","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":16},{"ruleId":"67","severity":1,"message":"85","line":12,"column":10,"nodeType":"69","messageId":"70","endLine":12,"endColumn":21},{"ruleId":"67","severity":1,"message":"86","line":14,"column":10,"nodeType":"69","messageId":"70","endLine":14,"endColumn":21},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"67","severity":1,"message":"91","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":20},{"ruleId":"87","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":76,"column":15,"nodeType":"96","endLine":76,"endColumn":61},{"ruleId":"94","severity":1,"message":"95","line":83,"column":15,"nodeType":"96","endLine":83,"endColumn":61},{"ruleId":"94","severity":1,"message":"95","line":326,"column":17,"nodeType":"96","endLine":326,"endColumn":75},{"ruleId":"67","severity":1,"message":"97","line":16,"column":8,"nodeType":"69","messageId":"70","endLine":16,"endColumn":12},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'uid' and 'verifyToken'. Either include them or remove the dependency array.","ArrayExpression",["98"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'alert' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'AddCourses' is defined but never used.","'Dashboard' is defined but never used.","'DashboardHeader' is defined but never used.","'Footer' is defined but never used.","'EmailVerify' is defined but never used.","'LandingPage' is defined but never used.","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'dashAvater' is defined but never used.",["99"],["100"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Play' is defined but never used.",{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [uid, verifyToken]",{"range":"103","text":"104"},[981,983],"[uid, verifyToken]"]