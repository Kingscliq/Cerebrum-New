[{"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js":"1","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\Input\\index.js":"2","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\CourseList\\index.js":"3","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\App.js":"4","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js":"5","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js":"6","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\ViewCategories\\index.js":"7","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\WatchCourse\\index.js":"8","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js":"9","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\ResetPassword\\index.js":"10","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js":"11","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\api\\index.js":"12","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\AccountInformation\\index.js":"13","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js":"14","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js":"15"},{"size":12617,"mtime":1612780595250,"results":"16","hashOfConfig":"17"},{"size":660,"mtime":1612780595230,"results":"18","hashOfConfig":"17"},{"size":1473,"mtime":1612780595185,"results":"19","hashOfConfig":"17"},{"size":3218,"mtime":1612781024199,"results":"20","hashOfConfig":"17"},{"size":3778,"mtime":1612780595245,"results":"21","hashOfConfig":"17"},{"size":1299,"mtime":1612441482241,"results":"22","hashOfConfig":"17"},{"size":3620,"mtime":1612783671507,"results":"23","hashOfConfig":"17"},{"size":5182,"mtime":1612774724397,"results":"24","hashOfConfig":"17"},{"size":250,"mtime":1612010834198,"results":"25","hashOfConfig":"17"},{"size":4028,"mtime":1612438009601,"results":"26","hashOfConfig":"17"},{"size":3320,"mtime":1612176719566,"results":"27","hashOfConfig":"17"},{"size":2960,"mtime":1612781013439,"results":"28","hashOfConfig":"17"},{"size":2604,"mtime":1612431947333,"results":"29","hashOfConfig":"17"},{"size":3386,"mtime":1612780595230,"results":"30","hashOfConfig":"17"},{"size":3440,"mtime":1612783999332,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1ydx3s8",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js",["64","65","66","67","68","69","70"],"/** @format */\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  dashAvater,\r\n  dashboardImg,\r\n  dashImg,\r\n  ellipsesvg1,\r\n  ellipsesvg2,\r\n} from \"../../../assets/images\";\r\nimport { CourseList } from \"../../../components/CourseList\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./TDashboard.css\";\r\nimport axios from \"axios\";\r\n\r\n// Api Call to get Authorized User\r\n\r\nconst TDashboard = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [role, setRole] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // const [dashimage, setDashimage] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  const [courseCount, setCourseCount] = useState(0);\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"userDetails\");\r\n    if (!data) {\r\n      window.open(\"/login\", \"_self\");\r\n    }\r\n    const user = JSON.parse(data);\r\n    const token = user.data.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    };\r\n    const userId = user.data.uid;\r\n    axios\r\n      .get(`https://cerebrum-v1.herokuapp.com/api/user/${userId}`, config)\r\n      .then((res) => {\r\n        console.log(\"res value\", res.data);\r\n        setUser(res.data.data);\r\n        setRole(res.data.data.role);\r\n      })\r\n      .catch((err) => {\r\n        window.open(\"/login\", \"_self\");\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.role === \"tutor\") {\r\n      // console.log(user);\r\n      axios\r\n        .get(`https://cerebrum-v1.herokuapp.com/api/tutor/course/${user._id}`)\r\n        .then((res) => {\r\n          setCourseCount(res.data.data.length);\r\n          setCourses(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <section className='container container-fluid tdashboard'>\r\n        <div\r\n          className='row shadow mx-auto mt-4'\r\n          style={{\r\n            width: \"80%\",\r\n            borderRadius: \"15px\",\r\n          }}\r\n        >\r\n          <div className='col-md-8 align-items-center'>\r\n            <div className='card p-5 border-0'>\r\n              <div className='container'>\r\n                <header>\r\n                  <h1 className='font-bold'>Welcome {user.firstName}</h1>\r\n                </header>\r\n                <article>\r\n                  Welcome to your cerebrum Dashboard. Cerebrum provides you with\r\n                  boundless access to courses if you are a student and An\r\n                  opportunity to earn as a tutor\r\n                </article>\r\n                <div className='d-flex flex-wrap justify-content-start my-3'>\r\n                  {role === \"tutor\" ? (\r\n                    <>\r\n                      <button className='btn-primary text-light'>\r\n                        <Link\r\n                          to='/dashboard/tutor/addcourse'\r\n                          style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Add Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn-outline-primary'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          style={{\r\n                            color: \"var(--primary-color)\",\r\n                            textDecoration: \"none\",\r\n                          }}\r\n                          // onMouseOver={}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <button className='btn btn-primary text-light'>\r\n                        <Link\r\n                          to='/courses'\r\n                          style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Buy Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn btn-outline-primary text-light'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className='col-md-4 align-items-center'> */}\r\n\r\n          <div className='col-4 d-none d-md-block d-flex align-items-center mt-5'>\r\n            <img\r\n              src={dashImg}\r\n              className='bg-warning rounded-circle shadow img-fluid'\r\n              alt='cerebrum'\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <section className='row my-4 mx-auto mt-5 gx-5 container'>\r\n          {role === \"learner\" ? (\r\n            <div className='col-md-6 card p-5 shadow mb-sm-5'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-md-6'>\r\n                  <img src={dashboardImg} alt='' />\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <h1 className='font-bold'>Code 101: Codeology</h1>\r\n                  <p>By {user.lastName}</p>\r\n                  <p>\r\n                    Lorem ipsum, or lipsum as it is sometimes known, is dummy\r\n                    text used in laying out print, graphic or web designs.\r\n                  </p>\r\n                  <p>\r\n                    <button className='btn-warning text-light'>\r\n                      Continue Course\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className='col-md-6 card py-5 shadow'>\r\n              {courses.length > 0 ? (\r\n                <>\r\n                  <div className='row align-items-center'>\r\n                    {courses.map((course, index) => (\r\n                      <>\r\n                        <CourseList\r\n                          courseName={course.name}\r\n                          courseDesc={course.description}\r\n                          courseImg={course.image_url}\r\n                          key={index}\r\n                        />\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className='d-flex align-items-center justify-content-center mt-5'>\r\n                    <h1>No Courses Uploaded Yet</h1>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n          {/* <div className='col-md-1'>&nbsp;</div> */}\r\n          <div className='col-md-6'>\r\n            {/* metrics d-flex flex-wrap flex-column */}\r\n            {role === \"tutor\" ? (\r\n              <>\r\n                {/* Render If Role is Tutor */}\r\n                <div className='card py-4 h-60 shadow mb-3'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      {/* mx-auto justify-items-between */}\r\n                      <div className='col-md-6'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No of Course Uploaded</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex justify-content-center align-item-center'>\r\n                          <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card p-4 h-60 shadow'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div>\r\n                          {role === \"tutor\" || courses.length > 0 ? (\r\n                            <>\r\n                              <h1\r\n                                style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                                className='text-primary text-center'\r\n                              >\r\n                                {courses.length}\r\n                              </h1>\r\n                              <p className='text-center'>Courses Uploaded</p>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {/* Render if role is Student */}\r\n                              <h1\r\n                                style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                                className='text-primary text-center'\r\n                              >\r\n                                {courses.length}\r\n                              </h1>\r\n                              <p className='text-center'>\r\n                                No Student Registered Yet\r\n                              </p>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className='card py-4 h-60 shadow mb-3'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      {/* mx-auto justify-items-between */}\r\n                      <div className='col-md-6'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No Course Enrolled Yet</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card p-4 h-60 shadow'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No Course Completed Yet</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n  // } else {\r\n  // return <Redirect to='/login' />;\r\n  // }\r\n};\r\nexport { TDashboard };\r\n",["71","72"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\Input\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\CourseList\\index.js",["73"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\App.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js",["74","75","76"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\ViewCategories\\index.js",["77"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\WatchCourse\\index.js",["78"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\ResetPassword\\index.js",["79"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\api\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\AccountInformation\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js",["80","81","82","83","84"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js",["85"],{"ruleId":"86","severity":1,"message":"87","line":2,"column":16,"nodeType":"88","messageId":"89","endLine":2,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":5,"column":3,"nodeType":"88","messageId":"89","endLine":5,"endColumn":13},{"ruleId":"86","severity":1,"message":"91","line":22,"column":10,"nodeType":"88","messageId":"89","endLine":22,"endColumn":18},{"ruleId":"86","severity":1,"message":"92","line":22,"column":20,"nodeType":"88","messageId":"89","endLine":22,"endColumn":31},{"ruleId":"86","severity":1,"message":"93","line":25,"column":10,"nodeType":"88","messageId":"89","endLine":25,"endColumn":21},{"ruleId":"86","severity":1,"message":"94","line":26,"column":10,"nodeType":"88","messageId":"89","endLine":26,"endColumn":14},{"ruleId":"86","severity":1,"message":"95","line":26,"column":16,"nodeType":"88","messageId":"89","endLine":26,"endColumn":23},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"86","severity":1,"message":"90","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":37,"column":13,"nodeType":"102","endLine":37,"endColumn":59},{"ruleId":"100","severity":1,"message":"101","line":72,"column":17,"nodeType":"102","endLine":72,"endColumn":63},{"ruleId":"100","severity":1,"message":"101","line":80,"column":15,"nodeType":"102","endLine":80,"endColumn":61},{"ruleId":"103","severity":1,"message":"104","line":19,"column":5,"nodeType":"105","endLine":19,"endColumn":7,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":31,"column":5,"nodeType":"105","endLine":31,"endColumn":7,"suggestions":"108"},{"ruleId":"86","severity":1,"message":"109","line":23,"column":19,"nodeType":"88","messageId":"89","endLine":23,"endColumn":29},{"ruleId":"86","severity":1,"message":"110","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"111","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":25},{"ruleId":"86","severity":1,"message":"112","line":11,"column":10,"nodeType":"88","messageId":"89","endLine":11,"endColumn":17},{"ruleId":"86","severity":1,"message":"113","line":11,"column":19,"nodeType":"88","messageId":"89","endLine":11,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":32,"column":27,"nodeType":"116","messageId":"117","endLine":32,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":24,"column":5,"nodeType":"105","endLine":24,"endColumn":7,"suggestions":"118"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'dashAvater' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'courseCount' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allCategories'. Either include it or remove the dependency array. You can also do a functional update 'setAllCategories(a => ...)' if you only need 'allCategories' in the 'setAllCategories' call.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'course_id' and 'courses'. Either include them or remove the dependency array.",["122"],"'setLoading' is assigned a value but never used.","'FaWindows' is defined but never used.","'dummyVideoImage' is defined but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"124","fix":"128"},"Update the dependencies array to be: [allCategories]",{"range":"129","text":"130"},"Update the dependencies array to be: [course_id, courses]",{"range":"131","text":"132"},{"range":"133","text":"130"},[744,746],"[allCategories]",[1094,1096],"[course_id, courses]",[796,798]]