[{"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js":"1","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\api\\index.js":"2","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\App.js":"3","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\SignUp\\index.js":"4","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js":"5","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ForgotPassword\\index.js":"6","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js":"7","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js":"8","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\WatchCourse\\index.js":"9","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js":"10","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\DashboardHeader\\index.js":"11","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\index.js":"12","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Footer\\index.js":"13","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js":"14","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js":"15","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js":"16","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\EmailVerify\\index.js":"17"},{"size":13174,"mtime":1611915703311,"results":"18","hashOfConfig":"19"},{"size":2642,"mtime":1611916239178,"results":"20","hashOfConfig":"19"},{"size":2064,"mtime":1611921654939,"results":"21","hashOfConfig":"19"},{"size":4629,"mtime":1611763529186,"results":"22","hashOfConfig":"19"},{"size":3667,"mtime":1611916379296,"results":"23","hashOfConfig":"19"},{"size":1602,"mtime":1611864099397,"results":"24","hashOfConfig":"19"},{"size":1148,"mtime":1611763528361,"results":"25","hashOfConfig":"19"},{"size":869,"mtime":1611915703485,"results":"26","hashOfConfig":"19"},{"size":5321,"mtime":1611915703511,"results":"27","hashOfConfig":"19"},{"size":8663,"mtime":1611924279260,"results":"28","hashOfConfig":"19"},{"size":1282,"mtime":1611921240078,"results":"29","hashOfConfig":"19"},{"size":728,"mtime":1611915703234,"results":"30","hashOfConfig":"19"},{"size":1666,"mtime":1611915703550,"results":"31","hashOfConfig":"19"},{"size":4115,"mtime":1611915703462,"results":"32","hashOfConfig":"19"},{"size":621,"mtime":1611847110601,"results":"33","hashOfConfig":"19"},{"size":250,"mtime":1611920496847,"results":"34","hashOfConfig":"19"},{"size":1049,"mtime":1611920944436,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"rsinsr",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js",["75"],"import React, { useState, useEffect } from \"react\";\r\nimport { AddCourseInput } from \"../../../components/AddCourseInput\";\r\nimport axios from \"axios\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./AddCourses.css\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { getCategories } from \"../../../api\";\r\nimport { dashboardImage } from \"../../../assets/images\";\r\nimport { Loader } from \"../../../components/Loader\";\r\n\r\nfunction AddCourses() {\r\n  const [toggle, setToggle] = useState({ one: true, two: false, three: false });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [courseImage, setCourseImage] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [form1, setForm1] = useState({\r\n    tutor_id: JSON.parse(localStorage.getItem(\"userDetails\")).data.uid,\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const [form2, setForm2] = useState({\r\n    course_id: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const [form3, setForm3] = useState({\r\n    course_id: \"\",\r\n    module_id: \"\",\r\n    name: \"\",\r\n    img: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    const name = event.target.className.baseVal || event.target.name;\r\n    setToggle({ ...toggle, [name]: !toggle[name] });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.files) {\r\n      let currentImg = event.target.name;\r\n      setForm1({ ...form1, [currentImg]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm1({ ...form1, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n\r\n  const handleChange2 = (event) => {\r\n    let currentInput = event.target.name;\r\n    setForm2({ ...form2, [currentInput]: event.target.value });\r\n  };\r\n\r\n  const handleChange3 = (event) => {\r\n    if (event.target.files) {\r\n      let currentVideo = event.target.name;\r\n      setForm3({ ...form3, [currentVideo]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm3({ ...form3, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n  useEffect(() => getCategories(setCategories), []);\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <main className=\"addcourse-page container\">\r\n        <h1>Add Course</h1>\r\n        <section className=\"card shadow py-5 px-4 mb-5\">\r\n          <div className=\"row col-12\">\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"addcourse-a\">\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Course Details</h2>\r\n                    <button name=\"one\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"one\",\r\n                        }}\r\n                      >\r\n                        {toggle.one ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"one\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form1.img);\r\n                        formData.append(\"description\", form1.description);\r\n                        formData.append(\"price\", form1.price);\r\n                        formData.append(\"category\", form1.category);\r\n                        formData.append(\"name\", form1.name);\r\n                        formData.append(\"tutor_id\", form1.tutor_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/course/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res.data.data);\r\n                            setCourseImage(res.data.data.image_url);\r\n                            setForm2({\r\n                              ...form2,\r\n                              course_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1.tutor_id));\r\n                      }}\r\n                      enctype=\"multipart/form-data\"\r\n                    >\r\n                      <label>Name of Course</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Enter course name\"\r\n                        name=\"name\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Course Description</label>\r\n                      <textarea\r\n                        className=\"form-control mb-3\"\r\n                        name=\"description\"\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter course description...\"\r\n                        rows=\"7\"\r\n                        disabled={loading}\r\n                      ></textarea>\r\n                      <label>Category</label>\r\n                      <select\r\n                        name=\"category\"\r\n                        onChange={handleChange}\r\n                        className=\"form-select mb-3\"\r\n                        aria-label=\"Default select example\"\r\n                        disabled={loading}\r\n                      >\r\n                        <option>Select course category</option>\r\n                        {categories.map((item) => (\r\n                          <option key={item._id} value={item.name}>\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <label>Cover Image</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Upload Image\"\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Price</label>\r\n                      <AddCourseInput\r\n                        type=\"text\"\r\n                        placeholder=\"Enter course price\"\r\n                        name=\"price\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        text=\"Save\"\r\n                        loadingIcon={loading && <Loader />}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          const userId = localStorage.getItem(\"userDetails\")\r\n                            .data.uid;\r\n                          console.log(userId);\r\n                        }}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Module</h2>\r\n                    <button name=\"two\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"two\",\r\n                        }}\r\n                      >\r\n                        {toggle.two ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"two\"] && (\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        console.log(form2);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/module/create\",\r\n                            form2\r\n                          )\r\n                          .then((res) => {\r\n                            setForm3({\r\n                              ...form3,\r\n                              course_id: form2.course_id,\r\n                              module_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          });\r\n                      }}\r\n                    >\r\n                      <label>Module</label>\r\n                      <AddCourseInput\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter module name\"\r\n                        onChange={handleChange2}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        loadingIcon={loading && <Loader />}\r\n                        text=\"Save\"\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Lesson</h2>\r\n                    <button name=\"three\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"three\",\r\n                        }}\r\n                      >\r\n                        {toggle.three ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"three\"] && (\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form3.img);\r\n                        formData.append(\"description\", form3.description);\r\n                        formData.append(\"name\", form3.name);\r\n                        formData.append(\"course_id\", form3.course_id);\r\n                        formData.append(\"module_id\", form3.module_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/lesson/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res);\r\n                          })\r\n                          .catch((err) => console.log(form1, form2, form3));\r\n                      }}\r\n                      enctype=\"multipart/form-data\"\r\n                    >\r\n                      <label>Lesson Name</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Enter lesson name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Video</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Upload Video\"\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Description</label>\r\n                      <textarea\r\n                        className=\"form-control mb-3\"\r\n                        placeholder=\"Enter lesson description\"\r\n                        rows=\"7\"\r\n                        name=\"description\"\r\n                        onChange={handleChange3}\r\n                      ></textarea>\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        text=\"Publish Course\"\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"mt-4 addcourse-b col-5\">\r\n                <img src={courseImage || dashboardImage} alt=\"No Image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { AddCourses };\r\n",["76","77"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\api\\index.js",["78"],"/** @format */\r\n\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport const signUpReg = (e, state, setLoadState) => {\r\n  e.preventDefault();\r\n\r\n  setLoadState(true);\r\n  let currentState = state;\r\n  console.log(currentState);\r\n\r\n  axios\r\n    .post(`https://cerebrum-v1.herokuapp.com/api/auth/sign-up`, currentState)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n\r\n      setLoadState(false);\r\n      window.open(\r\n        `verifyemail?email=${currentState.email}&name=${currentState.firstName}`,\r\n        \"_self\"\r\n      );\r\n    })\r\n    .catch(() => {\r\n      console.log(\"Error Occured\");\r\n      setLoadState(false);\r\n    });\r\n};\r\n\r\nexport const getCategories = (stateFunction) => {\r\n  axios(`https://cerebrum-v1.herokuapp.com/api/category`).then((res) => {\r\n    stateFunction(res.data.data);\r\n  });\r\n};\r\n\r\n/// Login Api\r\nexport const signIn = (e, user, setUser, setLoadState, setError, error) => {\r\n  e.preventDefault();\r\n  setLoadState(true);\r\n  const data = {\r\n    email: user.email,\r\n    password: user.password,\r\n  };\r\n\r\n  axios\r\n    .post(\"https://cerebrum-v1.herokuapp.com/api/auth/sign-in\", data)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n\r\n      const userDetails = JSON.stringify(res.data);\r\n      localStorage.setItem(\"userDetails\", userDetails);\r\n      setLoadState(false);\r\n\r\n      console.log(userDetails);\r\n      // console.log(\"proppps\", props);\r\n      // props.history.push(\"/tdashboard\");\r\n      window.open(\"/tdashboard\", \"_self\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"err\", err);\r\n      if (err.response === undefined) {\r\n        window.open(\"/login\", \"_self\");\r\n        setError(\"Opps! there is a problem with our server\");\r\n      }\r\n      if (\r\n        err.response.data.message ===\r\n        \"Email not verified, kindly check your email for verification link\"\r\n      ) {\r\n        window.open(`/verifyemail?email=${data.email}`, \"_self\");\r\n      }\r\n      // console.log(err.response.message);\r\n      // console.log(err.response.data.message);\r\n\r\n      setLoadState(false);\r\n    });\r\n};\r\n// console.log(withRouter)\r\n// withRouter(signIn);\r\n\r\n//Courses Api\r\nexport const getCourses = (courses, setCourses) => {\r\n  // e.preventDefault();\r\n  // setLoadState(true);\r\n  const data = [courses];\r\n  // const courseId = 12345;\r\n\r\n  axios\r\n    .get(`https://new-cerebrum.herokuapp.com/api/course/12345`, data)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setCourses(data);\r\n\r\n      // setLoadState(false);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"There is an error loading files\", err.response.data);\r\n      // setLoadState(false);\r\n    });\r\n};\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\App.js",["79","80"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\SignUp\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js",["81","82","83","84","85","86"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ForgotPassword\\index.js",["87"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js",["88","89"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js",[],["90","91"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\WatchCourse\\index.js",["92","93","94"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js",["95","96","97","98","99","100","101","102"],"/** @format */\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  dashAvater,\r\n  dashboardImg,\r\n  dashImg,\r\n  ellipsesvg1,\r\n  ellipsesvg2,\r\n} from \"../../../assets/images\";\r\nimport { CourseList } from \"../../../components/CourseList\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./TDashboard.css\";\r\nimport axios from \"axios\";\r\n\r\n// Api Call to get Authorized User\r\n\r\nconst TDashboard = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [role, setRole] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // const [dashimage, setDashimage] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  const [courseCount, setCourseCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"userDetails\");\r\n    if (!data) {\r\n      window.open(\"/login\", \"_self\");\r\n    }\r\n    const user = JSON.parse(data);\r\n    const token = user.data.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    };\r\n    const userId = user.data.uid;\r\n    axios\r\n      .get(`https://cerebrum-v1.herokuapp.com/api/user/${userId}`, config)\r\n      .then((res) => {\r\n        console.log(\"res value\", res.data);\r\n        // console.log(res.data.status);\r\n        setUser(res.data.data);\r\n        setRole(res.data.data.role);\r\n        // setDashimage(res.data.data.image_url);\r\n        // console.log(dashimage);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.msg);\r\n        window.open(\"/login\", \"_self\");\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const res = axios.get(\"https://cerebrum-v1.herokuapp.com/api/user/\");\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <section className='container tdashboard'>\r\n        <div className='container container-fluid mt-5'>\r\n          <div className='row card p-5 shadow'>\r\n            <div className='col-12 d-flex align-items-center'>\r\n              <div className='col-8 m-5 justify-content-between'>\r\n                <header>\r\n                  <h1 className='font-bold'>Welcome {user.firstName}</h1>\r\n                </header>\r\n                <article>\r\n                  Welcome to your cerebrum Dashboard. Cerebrum provides you with\r\n                  boundless access to courses\r\n                </article>\r\n                <div className='d-flex flex-wrap justify-content-start my-3'>\r\n                  {role === \"tutor\" ? (\r\n                    <>\r\n                      <button className='btn btn-primary'>\r\n                        <Link\r\n                          to='/dashboard/tutor/addcourse'\r\n                          // style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Add Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn btn-primary'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          // style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <button className='btn btn-primary'>\r\n                        <Link\r\n                          to='/courses'\r\n                          // style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Buy Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn btn-primary'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          // style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className='col-4'>\r\n                <img\r\n                  src={dashImg}\r\n                  className='img-responsive bg-warning rounded-circle shadow img-fluid'\r\n                  alt='cerebrum'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className='row my-4 mt-5'>\r\n          {role === \"learner\" ? (\r\n            <div className='col-md-6 card p-5 shadow'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-md-6'>\r\n                  <img src={dashboardImg} alt='' />\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <h1 className='font-bold'>Code 101: Codeology</h1>\r\n                  <p>By {user.lastName}</p>\r\n                  <p>\r\n                    Lorem ipsum, or lipsum as it is sometimes known, is dummy\r\n                    text used in laying out print, graphic or web designs.\r\n                  </p>\r\n                  <p>\r\n                    <button className='btn-warning text-light'>\r\n                      Continue Course\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className='col-md-6 card py-5 shadow'>\r\n              <div className='row align-items-center'>\r\n                <CourseList\r\n                  courseName='Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n                <CourseList\r\n                  courseName=' Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n                <CourseList\r\n                  courseName=' Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n                <CourseList\r\n                  courseName=' Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n                <CourseList\r\n                  courseName=' Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n                <CourseList\r\n                  courseName=' Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n                <CourseList\r\n                  courseName=' Code 101: Codeology'\r\n                  courseDesc='Course +'\r\n                  courseImg={dashAvater}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className='col-md-6 metrics d-flex flex-wrap flex-column'>\r\n            <div className='card py-4 h-60 shadow mb-3'>\r\n              <div className='row mx-auto justify-items-between'>\r\n                <div className='col-md-6'>\r\n                  <div>\r\n                    <h1\r\n                      style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                      className='text-primary'\r\n                    >\r\n                      0\r\n                    </h1>\r\n                    <p>Courses Enrolled</p>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='card p-4 h-60 shadow'>\r\n              <div className='row mx-auto'>\r\n                <div className='col-md-6'>\r\n                  <div>\r\n                    <h1\r\n                      style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                      className='text-primary'\r\n                    >\r\n                      0\r\n                    </h1>\r\n                    <p>Courses Completed</p>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n  // } else {\r\n  // return <Redirect to='/login' />;\r\n  // }\r\n};\r\nexport { TDashboard };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\DashboardHeader\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\index.js",["103","104","105","106","107","108"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Footer\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js",["109","110"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\EmailVerify\\index.js",["111","112"],{"ruleId":"113","severity":1,"message":"114","line":320,"column":17,"nodeType":"115","endLine":320,"endColumn":75},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":20},{"ruleId":"120","severity":1,"message":"124","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":19},{"ruleId":"120","severity":1,"message":"125","line":16,"column":10,"nodeType":"122","messageId":"123","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"126","line":3,"column":17,"nodeType":"122","messageId":"123","endLine":3,"endColumn":26},{"ruleId":"120","severity":1,"message":"127","line":4,"column":16,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"120","severity":1,"message":"128","line":20,"column":10,"nodeType":"122","messageId":"123","endLine":20,"endColumn":18},{"ruleId":"120","severity":1,"message":"129","line":20,"column":20,"nodeType":"122","messageId":"123","endLine":20,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":22,"column":10,"nodeType":"122","messageId":"123","endLine":22,"endColumn":15},{"ruleId":"120","severity":1,"message":"131","line":22,"column":17,"nodeType":"122","messageId":"123","endLine":22,"endColumn":25},{"ruleId":"120","severity":1,"message":"132","line":10,"column":17,"nodeType":"122","messageId":"123","endLine":10,"endColumn":25},{"ruleId":"120","severity":1,"message":"133","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":26,"column":39,"nodeType":"136","endLine":26,"endColumn":63},{"ruleId":"116","replacedBy":"137"},{"ruleId":"118","replacedBy":"138"},{"ruleId":"120","severity":1,"message":"139","line":14,"column":9,"nodeType":"122","messageId":"123","endLine":14,"endColumn":25},{"ruleId":"120","severity":1,"message":"140","line":14,"column":27,"nodeType":"122","messageId":"123","endLine":14,"endColumn":46},{"ruleId":"141","severity":1,"message":"142","line":26,"column":5,"nodeType":"143","endLine":26,"endColumn":7,"suggestions":"144"},{"ruleId":"120","severity":1,"message":"145","line":2,"column":16,"nodeType":"122","messageId":"123","endLine":2,"endColumn":24},{"ruleId":"120","severity":1,"message":"128","line":22,"column":10,"nodeType":"122","messageId":"123","endLine":22,"endColumn":18},{"ruleId":"120","severity":1,"message":"129","line":22,"column":20,"nodeType":"122","messageId":"123","endLine":22,"endColumn":31},{"ruleId":"120","severity":1,"message":"146","line":24,"column":10,"nodeType":"122","messageId":"123","endLine":24,"endColumn":17},{"ruleId":"120","severity":1,"message":"147","line":24,"column":19,"nodeType":"122","messageId":"123","endLine":24,"endColumn":29},{"ruleId":"120","severity":1,"message":"148","line":25,"column":10,"nodeType":"122","messageId":"123","endLine":25,"endColumn":21},{"ruleId":"120","severity":1,"message":"149","line":25,"column":23,"nodeType":"122","messageId":"123","endLine":25,"endColumn":37},{"ruleId":"120","severity":1,"message":"150","line":57,"column":11,"nodeType":"122","messageId":"123","endLine":57,"endColumn":14},{"ruleId":"120","severity":1,"message":"151","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":20},{"ruleId":"120","severity":1,"message":"124","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":19},{"ruleId":"120","severity":1,"message":"152","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":25},{"ruleId":"120","severity":1,"message":"153","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":16},{"ruleId":"120","severity":1,"message":"154","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":21},{"ruleId":"120","severity":1,"message":"155","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":76,"column":15,"nodeType":"115","endLine":76,"endColumn":61},{"ruleId":"113","severity":1,"message":"114","line":83,"column":15,"nodeType":"115","endLine":83,"endColumn":61},{"ruleId":"120","severity":1,"message":"156","line":3,"column":17,"nodeType":"122","messageId":"123","endLine":3,"endColumn":25},{"ruleId":"141","severity":1,"message":"157","line":28,"column":6,"nodeType":"143","endLine":28,"endColumn":8,"suggestions":"158"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'signIn' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'alert' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'setError' is assigned a value but never used.","'dashAvater' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["159"],["160"],"'currentlyPlaying' is assigned a value but never used.","'setcurrentlyPlaying' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'Redirect' is defined but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","'courseCount' is assigned a value but never used.","'setCourseCount' is assigned a value but never used.","'res' is assigned a value but never used.","'AddCourses' is defined but never used.","'DashboardHeader' is defined but never used.","'Footer' is defined but never used.","'EmailVerify' is defined but never used.","'LandingPage' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'uid' and 'verifyToken'. Either include them or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [courses]",{"range":"167","text":"168"},"Update the dependencies array to be: [uid, verifyToken]",{"range":"169","text":"170"},[887,889],"[courses]",[981,983],"[uid, verifyToken]"]