[{"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\App.js":"1","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js":"2","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js":"3","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js":"4","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js":"5","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js":"6","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js":"7","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Loader\\index.js":"8","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ChangePassword\\index.js":"9","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\assets\\images\\index.js":"10","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Footer\\index.js":"11","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Header\\Index.js":"12","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentOption\\index.js":"13","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js":"14","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorProfileSettings\\index.js":"15","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js":"16","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ResetPassword\\index.js":"17","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js":"18","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js":"19"},{"size":3265,"mtime":1612538961389,"results":"20","hashOfConfig":"21"},{"size":13481,"mtime":1611926728178,"results":"22","hashOfConfig":"21"},{"size":869,"mtime":1611915703485,"results":"23","hashOfConfig":"21"},{"size":3320,"mtime":1612281383183,"results":"24","hashOfConfig":"21"},{"size":3778,"mtime":1612538591219,"results":"25","hashOfConfig":"21"},{"size":3702,"mtime":1612538591622,"results":"26","hashOfConfig":"21"},{"size":1473,"mtime":1612355920376,"results":"27","hashOfConfig":"21"},{"size":225,"mtime":1611658544573,"results":"28","hashOfConfig":"21"},{"size":1501,"mtime":1612446005921,"results":"29","hashOfConfig":"21"},{"size":1208,"mtime":1612262469663,"results":"30","hashOfConfig":"21"},{"size":1669,"mtime":1612538591315,"results":"31","hashOfConfig":"21"},{"size":1204,"mtime":1612538591356,"results":"32","hashOfConfig":"21"},{"size":2595,"mtime":1612538591404,"results":"33","hashOfConfig":"21"},{"size":3386,"mtime":1612446579267,"results":"34","hashOfConfig":"21"},{"size":2838,"mtime":1612446006066,"results":"35","hashOfConfig":"21"},{"size":3325,"mtime":1612538591188,"results":"36","hashOfConfig":"21"},{"size":4028,"mtime":1612281158894,"results":"37","hashOfConfig":"21"},{"size":660,"mtime":1612538591150,"results":"38","hashOfConfig":"21"},{"size":1759,"mtime":1612446005930,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rsinsr",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\App.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js",["81"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AddCourseInput } from \"../../../components/AddCourseInput\";\r\nimport axios from \"axios\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./AddCourses.css\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { getCategories } from \"../../../api\";\r\nimport { dashboardImage } from \"../../../assets/images\";\r\nimport { Loader } from \"../../../components/Loader\";\r\n\r\nfunction AddCourses() {\r\n  const [toggle, setToggle] = useState({ one: true, two: false, three: false });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [courseImage, setCourseImage] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [form1, setForm1] = useState({\r\n    tutor_id: JSON.parse(localStorage.getItem(\"userDetails\")).data.uid,\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const [form2, setForm2] = useState({\r\n    course_id: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const [form3, setForm3] = useState({\r\n    course_id: \"\",\r\n    module_id: \"\",\r\n    name: \"\",\r\n    img: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    const name = event.target.className.baseVal || event.target.name;\r\n    setToggle({ ...toggle, [name]: !toggle[name] });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.files) {\r\n      let currentImg = event.target.name;\r\n      setForm1({ ...form1, [currentImg]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm1({ ...form1, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n\r\n  const handleChange2 = (event) => {\r\n    let currentInput = event.target.name;\r\n    setForm2({ ...form2, [currentInput]: event.target.value });\r\n  };\r\n\r\n  const handleChange3 = (event) => {\r\n    if (event.target.files) {\r\n      let currentVideo = event.target.name;\r\n      setForm3({ ...form3, [currentVideo]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm3({ ...form3, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n  useEffect(() => getCategories(setCategories), []);\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <main className='addcourse-page container'>\r\n        <h1>Add Course</h1>\r\n        <section className='card shadow py-5 px-4 mb-5'>\r\n          <div className='row col-12'>\r\n            <div className='col-sm-12 col-md-6'>\r\n              <div className='addcourse-a'>\r\n                <section>\r\n                  <div className='courses-form-header'>\r\n                    <h2 className='py-4'>Course Details</h2>\r\n                    <button name='one' onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"one\",\r\n                        }}\r\n                      >\r\n                        {toggle.one ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"one\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form1.img);\r\n                        formData.append(\"description\", form1.description);\r\n                        formData.append(\"price\", form1.price);\r\n                        formData.append(\"category\", form1.category);\r\n                        formData.append(\"name\", form1.name);\r\n                        formData.append(\"tutor_id\", form1.tutor_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/course/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res.data.data);\r\n                            setCourseImage(res.data.data.image_url);\r\n                            setForm2({\r\n                              ...form2,\r\n                              course_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1.tutor_id));\r\n                      }}\r\n                      enctype='multipart/form-data'\r\n                    >\r\n                      <label>Name of Course</label>\r\n                      <AddCourseInput\r\n                        placeholder='Enter course name'\r\n                        name='name'\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Course Description</label>\r\n                      <textarea\r\n                        className='form-control mb-3'\r\n                        name='description'\r\n                        onChange={handleChange}\r\n                        placeholder='Enter course description...'\r\n                        rows='7'\r\n                        disabled={loading}\r\n                      ></textarea>\r\n                      <label>Category</label>\r\n                      <select\r\n                        name='category'\r\n                        onChange={handleChange}\r\n                        className='form-select mb-3'\r\n                        aria-label='Default select example'\r\n                        disabled={loading}\r\n                      >\r\n                        <option>Select course category</option>\r\n                        {categories.map((item) => (\r\n                          <option key={item._id} value={item.name}>\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <label>Cover Image</label>\r\n                      <AddCourseInput\r\n                        placeholder='Upload Image'\r\n                        type='file'\r\n                        name='img'\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Price</label>\r\n                      <AddCourseInput\r\n                        type='text'\r\n                        placeholder='Enter course price'\r\n                        name='price'\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className='btn btn-primary'\r\n                        text='Save'\r\n                        loadingIcon={loading && <Loader />}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          const userId = localStorage.getItem(\"userDetails\")\r\n                            .data.uid;\r\n                          console.log(userId);\r\n                        }}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className='courses-form-header'>\r\n                    <h2 className='py-4'>Module</h2>\r\n                    <button name='two' onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"two\",\r\n                        }}\r\n                      >\r\n                        {toggle.two ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"two\"] && (\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        console.log(form2);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/module/create\",\r\n                            form2\r\n                          )\r\n                          .then((res) => {\r\n                            setForm3({\r\n                              ...form3,\r\n                              course_id: form2.course_id,\r\n                              module_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          });\r\n                      }}\r\n                    >\r\n                      <label>Module</label>\r\n                      <AddCourseInput\r\n                        name='name'\r\n                        type='text'\r\n                        placeholder='Enter module name'\r\n                        onChange={handleChange2}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className='btn btn-primary'\r\n                        loadingIcon={loading && <Loader />}\r\n                        text='Save'\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className='courses-form-header'>\r\n                    <h2 className='py-4'>Lesson</h2>\r\n                    <button name='three' onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"three\",\r\n                        }}\r\n                      >\r\n                        {toggle.three ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"three\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form3.img);\r\n                        formData.append(\"description\", form3.description);\r\n                        formData.append(\"name\", form3.name);\r\n                        formData.append(\"course_id\", form3.course_id);\r\n                        formData.append(\"module_id\", form3.module_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/lesson/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res);\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1, form2, form3));\r\n                      }}\r\n                      enctype='multipart/form-data'\r\n                    >\r\n                      <label>Lesson Name</label>\r\n                      <AddCourseInput\r\n                        placeholder='Enter lesson name'\r\n                        type='text'\r\n                        name='name'\r\n                        disabled={loading}\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Video</label>\r\n                      <AddCourseInput\r\n                        placeholder='Upload Video'\r\n                        type='file'\r\n                        name='img'\r\n                        disabled={loading}\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Description</label>\r\n                      <textarea\r\n                        className='form-control mb-3'\r\n                        placeholder='Enter lesson description'\r\n                        rows='7'\r\n                        name='description'\r\n                        loading={loading}\r\n                        onChange={handleChange3}\r\n                      ></textarea>\r\n                      <Button\r\n                        className='btn btn-primary'\r\n                        text='Publish Course'\r\n                        loadingIcon={loading && <Loader />}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n            <div className='col-sm-12 col-md-6'>\r\n              <div className='mt-4 addcourse-b col-5'>\r\n                <img src={courseImage || dashboardImage} alt='No Image' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { AddCourses };\r\n",["82","83"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js",["84","85","86"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js",["87","88","89","90","91"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js",["92"],"/** @format */\r\n\r\nimport React from \"react\";\r\nimport { dashAvater } from \"../../assets/images\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport \"./CourseList.css\";\r\nconst CourseList = ({ courseName, courseImg, courseDesc }) => {\r\n  return (\r\n    <div>\r\n      <section className='courselist m-2'>\r\n        <article className='card'>\r\n          <div className='container'>\r\n            {/* <div className='d-flex align-item-start justify-content-between'> */}\r\n            <div className='row'>\r\n              <div className='col-md-10'>\r\n                <div className='row'>\r\n                  <div className='col-2'>\r\n                    <img\r\n                      src={courseImg}\r\n                      style={{ borderRadius: \"5px\" }}\r\n                      alt=''\r\n                      height='30px'\r\n                      width='30px'\r\n                    />\r\n                  </div>\r\n                  <div className='col-1'>&nbsp;</div>\r\n                  <div className='col-8'>\r\n                    <h6 className='p-0 m-0 font-bold'>{courseName}</h6>\r\n                    {courseDesc}\r\n                    {/* <p>30 courses+</p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='text-primary col-2'>\r\n                <BsThreeDotsVertical />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CourseList };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Loader\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ChangePassword\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\assets\\images\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Footer\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Header\\Index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentOption\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js",["93","94","95","96","97"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorProfileSettings\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js",["98"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ResetPassword\\index.js",["99"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js",[],{"ruleId":"100","severity":1,"message":"101","line":328,"column":17,"nodeType":"102","endLine":328,"endColumn":75},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"100","severity":1,"message":"101","line":37,"column":13,"nodeType":"102","endLine":37,"endColumn":59},{"ruleId":"100","severity":1,"message":"101","line":72,"column":17,"nodeType":"102","endLine":72,"endColumn":63},{"ruleId":"100","severity":1,"message":"101","line":80,"column":15,"nodeType":"102","endLine":80,"endColumn":61},{"ruleId":"107","severity":1,"message":"108","line":3,"column":17,"nodeType":"109","messageId":"110","endLine":3,"endColumn":26},{"ruleId":"107","severity":1,"message":"111","line":4,"column":16,"nodeType":"109","messageId":"110","endLine":4,"endColumn":26},{"ruleId":"107","severity":1,"message":"112","line":20,"column":10,"nodeType":"109","messageId":"110","endLine":20,"endColumn":18},{"ruleId":"107","severity":1,"message":"113","line":20,"column":20,"nodeType":"109","messageId":"110","endLine":20,"endColumn":31},{"ruleId":"107","severity":1,"message":"114","line":22,"column":10,"nodeType":"109","messageId":"110","endLine":22,"endColumn":15},{"ruleId":"107","severity":1,"message":"115","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":20},{"ruleId":"107","severity":1,"message":"116","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":25},{"ruleId":"107","severity":1,"message":"118","line":11,"column":10,"nodeType":"109","messageId":"110","endLine":11,"endColumn":17},{"ruleId":"107","severity":1,"message":"119","line":11,"column":19,"nodeType":"109","messageId":"110","endLine":11,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":32,"column":27,"nodeType":"122","messageId":"123","endLine":32,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":23,"column":5,"nodeType":"126","endLine":23,"endColumn":7,"suggestions":"127"},{"ruleId":"107","severity":1,"message":"128","line":23,"column":19,"nodeType":"109","messageId":"110","endLine":23,"endColumn":29},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'alert' is assigned a value but never used.","'dashAvater' is defined but never used.","'FaWindows' is defined but never used.","'dummyVideoImage' is defined but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allCategories'. Either include it or remove the dependency array. You can also do a functional update 'setAllCategories(a => ...)' if you only need 'allCategories' in the 'setAllCategories' call.","ArrayExpression",["131"],"'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [allCategories]",{"range":"134","text":"135"},[754,756],"[allCategories]"]