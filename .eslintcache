[{"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\index.js":"1","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js":"2","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js":"3","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js":"4","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js":"5","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\widgets\\PaymentOption\\index.js":"6","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\EmailVerify\\index.js":"7","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\ViewCategories\\index.js":"8","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\TutorProfileSettings\\index.js":"9","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\AccountInformation\\index.js":"10","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\Loader\\index.js":"11","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\ChangePassword\\index.js":"12","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js":"13","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js":"14","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js":"15"},{"size":408,"mtime":1612790432112,"results":"16","hashOfConfig":"17"},{"size":3921,"mtime":1612790432226,"results":"18","hashOfConfig":"17"},{"size":3985,"mtime":1612790432231,"results":"19","hashOfConfig":"17"},{"size":13481,"mtime":1612790432117,"results":"20","hashOfConfig":"17"},{"size":4132,"mtime":1612881863811,"results":"21","hashOfConfig":"17"},{"size":2629,"mtime":1612800784181,"results":"22","hashOfConfig":"17"},{"size":1049,"mtime":1612010834229,"results":"23","hashOfConfig":"17"},{"size":4254,"mtime":1612858402508,"results":"24","hashOfConfig":"17"},{"size":3164,"mtime":1612960341422,"results":"25","hashOfConfig":"17"},{"size":3849,"mtime":1612958440227,"results":"26","hashOfConfig":"17"},{"size":224,"mtime":1612862766766,"results":"27","hashOfConfig":"17"},{"size":3147,"mtime":1612885601252,"results":"28","hashOfConfig":"17"},{"size":2159,"mtime":1612961436325,"results":"29","hashOfConfig":"17"},{"size":1299,"mtime":1612441482241,"results":"30","hashOfConfig":"17"},{"size":12000,"mtime":1612790432142,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ydx3s8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\index.js",[],["65","66"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js",["67","68","69","70","71"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js",["72"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AddCourseInput } from \"../../../components/AddCourseInput\";\r\nimport axios from \"axios\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./AddCourses.css\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { getCategories } from \"../../../api\";\r\nimport { dashboardImage } from \"../../../assets/images\";\r\nimport { Loader } from \"../../../components/Loader\";\r\n\r\nfunction AddCourses() {\r\n  const [toggle, setToggle] = useState({ one: true, two: false, three: false });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [courseImage, setCourseImage] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [form1, setForm1] = useState({\r\n    tutor_id: JSON.parse(localStorage.getItem(\"userDetails\")).data.uid,\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const [form2, setForm2] = useState({\r\n    course_id: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const [form3, setForm3] = useState({\r\n    course_id: \"\",\r\n    module_id: \"\",\r\n    name: \"\",\r\n    img: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    const name = event.target.className.baseVal || event.target.name;\r\n    setToggle({ ...toggle, [name]: !toggle[name] });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.files) {\r\n      let currentImg = event.target.name;\r\n      setForm1({ ...form1, [currentImg]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm1({ ...form1, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n\r\n  const handleChange2 = (event) => {\r\n    let currentInput = event.target.name;\r\n    setForm2({ ...form2, [currentInput]: event.target.value });\r\n  };\r\n\r\n  const handleChange3 = (event) => {\r\n    if (event.target.files) {\r\n      let currentVideo = event.target.name;\r\n      setForm3({ ...form3, [currentVideo]: event.target.files[0] });\r\n    } else {\r\n      let currentInput = event.target.name;\r\n      setForm3({ ...form3, [currentInput]: event.target.value });\r\n    }\r\n  };\r\n  useEffect(() => getCategories(setCategories), []);\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <main className=\"addcourse-page container\">\r\n        <h1>Add Course</h1>\r\n        <section className=\"card shadow py-5 px-4 mb-5\">\r\n          <div className=\"row col-12\">\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"addcourse-a\">\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Course Details</h2>\r\n                    <button name=\"one\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"one\",\r\n                        }}\r\n                      >\r\n                        {toggle.one ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"one\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form1.img);\r\n                        formData.append(\"description\", form1.description);\r\n                        formData.append(\"price\", form1.price);\r\n                        formData.append(\"category\", form1.category);\r\n                        formData.append(\"name\", form1.name);\r\n                        formData.append(\"tutor_id\", form1.tutor_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/course/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res.data.data);\r\n                            setCourseImage(res.data.data.image_url);\r\n                            setForm2({\r\n                              ...form2,\r\n                              course_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1.tutor_id));\r\n                      }}\r\n                      enctype=\"multipart/form-data\"\r\n                    >\r\n                      <label>Name of Course</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Enter course name\"\r\n                        name=\"name\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Course Description</label>\r\n                      <textarea\r\n                        className=\"form-control mb-3\"\r\n                        name=\"description\"\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter course description...\"\r\n                        rows=\"7\"\r\n                        disabled={loading}\r\n                      ></textarea>\r\n                      <label>Category</label>\r\n                      <select\r\n                        name=\"category\"\r\n                        onChange={handleChange}\r\n                        className=\"form-select mb-3\"\r\n                        aria-label=\"Default select example\"\r\n                        disabled={loading}\r\n                      >\r\n                        <option>Select course category</option>\r\n                        {categories.map((item) => (\r\n                          <option key={item._id} value={item.name}>\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <label>Cover Image</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Upload Image\"\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <label>Price</label>\r\n                      <AddCourseInput\r\n                        type=\"text\"\r\n                        placeholder=\"Enter course price\"\r\n                        name=\"price\"\r\n                        onChange={handleChange}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        text=\"Save\"\r\n                        loadingIcon={loading && <Loader />}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          const userId = localStorage.getItem(\"userDetails\")\r\n                            .data.uid;\r\n                          console.log(userId);\r\n                        }}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Module</h2>\r\n                    <button name=\"two\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"two\",\r\n                        }}\r\n                      >\r\n                        {toggle.two ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"two\"] && (\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        console.log(form2);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/module/create\",\r\n                            form2\r\n                          )\r\n                          .then((res) => {\r\n                            setForm3({\r\n                              ...form3,\r\n                              course_id: form2.course_id,\r\n                              module_id: res.data.data._id,\r\n                            });\r\n                            setLoading(false);\r\n                          });\r\n                      }}\r\n                    >\r\n                      <label>Module</label>\r\n                      <AddCourseInput\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter module name\"\r\n                        onChange={handleChange2}\r\n                        disabled={loading}\r\n                      />\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        loadingIcon={loading && <Loader />}\r\n                        text=\"Save\"\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n                <section>\r\n                  <div className=\"courses-form-header\">\r\n                    <h2 className=\"py-4\">Lesson</h2>\r\n                    <button name=\"three\" onClick={handleClick}>\r\n                      <IconContext.Provider\r\n                        value={{\r\n                          className: \"three\",\r\n                        }}\r\n                      >\r\n                        {toggle.three ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                      </IconContext.Provider>\r\n                    </button>\r\n                  </div>\r\n                  {toggle[\"three\"] && (\r\n                    <form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        let formData = new FormData();\r\n                        formData.append(\"img\", form3.img);\r\n                        formData.append(\"description\", form3.description);\r\n                        formData.append(\"name\", form3.name);\r\n                        formData.append(\"course_id\", form3.course_id);\r\n                        formData.append(\"module_id\", form3.module_id);\r\n                        console.log(formData);\r\n                        axios\r\n                          .post(\r\n                            \"https://cerebrum-v1.herokuapp.com/api/tutor/lesson/create\",\r\n                            formData,\r\n                            {\r\n                              headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            console.log(res);\r\n                            setLoading(false);\r\n                          })\r\n                          .catch((err) => console.log(form1, form2, form3));\r\n                      }}\r\n                      enctype=\"multipart/form-data\"\r\n                    >\r\n                      <label>Lesson Name</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Enter lesson name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        disabled={loading}\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Video</label>\r\n                      <AddCourseInput\r\n                        placeholder=\"Upload Video\"\r\n                        type=\"file\"\r\n                        name=\"img\"\r\n                        disabled={loading}\r\n                        onChange={handleChange3}\r\n                      />\r\n                      <label>Lesson Description</label>\r\n                      <textarea\r\n                        className=\"form-control mb-3\"\r\n                        placeholder=\"Enter lesson description\"\r\n                        rows=\"7\"\r\n                        name=\"description\"\r\n                        loading={loading}\r\n                        onChange={handleChange3}\r\n                      ></textarea>\r\n                      <Button\r\n                        className=\"btn btn-primary\"\r\n                        text=\"Publish Course\"\r\n                        loadingIcon={loading && <Loader />}\r\n                      />\r\n                    </form>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"mt-4 addcourse-b col-5\">\r\n                <img src={courseImage || dashboardImage} alt=\"No Image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { AddCourses };\r\n","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js",["73"],"import React, { useState, useEffect } from \"react\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport { getAllCourses, getAllCategories } from \"../../../api\";\r\nimport { BiMenuAltLeft } from \"react-icons/bi\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Courses.css\";\r\nimport { Loader } from \"../../../components/Loader\";\r\n\r\nfunction Courses() {\r\n\tconst [allCourses, setAllCourses] = useState([]);\r\n\tconst [allCategories, setAllCategories] = useState([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllCourses().then((dataGotten) => {\r\n\t\t\tsetAllCourses(dataGotten);\r\n\t\t\tconsole.log(dataGotten[0].tutor_id);\r\n\t\t});\r\n\r\n\t\tgetAllCategories(allCategories, setAllCategories);\r\n\t\tsetAllCategories(allCategories);\r\n\t\tsetTimeout(() => setLoading(false), 5000);\r\n\t}, []);\r\n\r\n\tconst [toggle, setToggle] = useState({ clicked: false });\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetToggle({ clicked: !toggle.clicked });\r\n\t};\r\n\tconsole.log(allCourses);\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashboardHeader />\r\n\t\t\t\t<div className=\"special-loader\">\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DashboardHeader />\r\n\t\t\t<main className=\"container my-3 d-flex flex-row justify-content-between\">\r\n\t\t\t\t<div className=\"menu-icon m-2 h1\" onClick={handleClick}>\r\n\t\t\t\t\t{toggle.clicked ? <VscChromeClose /> : <BiMenuAltLeft />}\r\n\t\t\t\t</div>\r\n\t\t\t\t<aside className=\"col-lg-3 col-md-4\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\ttoggle.clicked\r\n\t\t\t\t\t\t\t\t? \"all-categories-active bg-white mb-2 p-4 rounded animate__animated animate__slideInLeft\"\r\n\t\t\t\t\t\t\t\t: `all-categories bg-white mb-2 p-4 rounded animate__animated animate__slideInLeft`\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<p className=\"signup-p all-courses-category-list\"> All Courses </p>\r\n\t\t\t\t\t\t<p className=\"signup-p all-courses-category-list\"> Recommended Courses </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\ttoggle.clicked\r\n\t\t\t\t\t\t\t\t? \"all-categories-active bg-white p-4 rounded animate__animated animate__slideInLeft\"\r\n\t\t\t\t\t\t\t\t: \"all-categories bg-white p-4 rounded animate__animated animate__slideInLeft\"\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<ul className=\"courses-list\">\r\n\t\t\t\t\t\t\t<h1 className=\"signup-p fw-bold animate__animated animate__slideInLeft\"> Categories </h1> <hr />\r\n\t\t\t\t\t\t\t{allCategories.map((category) => (\r\n\t\t\t\t\t\t\t\t<li key={category._id} className=\"signup-p pb-3\">\r\n\t\t\t\t\t\t\t\t\t<Link to={`/course/categories`} className=\"text-decoration-none all-courses-category-list\">\r\n\t\t\t\t\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</aside>\r\n\t\t\t\t<section className=\"col-lg-8 col-md-7\">\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h1 className=\"h4 fw-700 animate__animated animate__zoomIn\"> All Courses</h1>\r\n\t\t\t\t\t\t<article className={toggle.clicked ? `d-none` : \"col-12 d-flex flex-row flex-wrap mb-3\"}>\r\n\t\t\t\t\t\t\t{allCourses.map((course) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={course._id}\r\n\t\t\t\t\t\t\t\t\tclassName=\"bg-white all-courses-div d-flex flex-column border m-2 position-relative animate__animated animate__zoomIn\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"courses-img\" src={course.image_url} width=\"100%\" height=\"75%\" alt=\"dispay\" />\r\n\r\n\t\t\t\t\t\t\t\t\t<p className=\"badge position-absolute courses-price-badge p-2\">\r\n\t\t\t\t\t\t\t\t\t\t{course.price > 0 ? `N ${course.price}` : (course.price = \"FREE\")}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<div className=\"w-100\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"bg-white rounded-circle courses-tutor-image-radius\" height=\"55px\" width=\"55px\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={course.tutor_id !== undefined ? course.tutor_id.image_url : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\theight=\"45px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"45px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"tutor pic\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"all-courses-link\" href={`/buycourse/?id=${course._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"fw-bold signup-p mx-4 mt-3\">{course.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport { Courses };\r\n","C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\widgets\\PaymentOption\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\auth\\EmailVerify\\index.js",["74","75"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\ViewCategories\\index.js",["76"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\TutorProfileSettings\\index.js",["77","78"],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\AccountInformation\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\Loader\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\ChangePassword\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js",[],"C:\\Users\\ACER\\Desktop\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js",["79","80","81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":26},{"ruleId":"90","severity":1,"message":"94","line":4,"column":16,"nodeType":"92","messageId":"93","endLine":4,"endColumn":26},{"ruleId":"90","severity":1,"message":"95","line":21,"column":10,"nodeType":"92","messageId":"93","endLine":21,"endColumn":18},{"ruleId":"90","severity":1,"message":"96","line":21,"column":20,"nodeType":"92","messageId":"93","endLine":21,"endColumn":31},{"ruleId":"90","severity":1,"message":"97","line":23,"column":10,"nodeType":"92","messageId":"93","endLine":23,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":328,"column":17,"nodeType":"100","endLine":328,"endColumn":75},{"ruleId":"101","severity":1,"message":"102","line":25,"column":5,"nodeType":"103","endLine":25,"endColumn":7,"suggestions":"104"},{"ruleId":"90","severity":1,"message":"105","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":25},{"ruleId":"101","severity":1,"message":"106","line":28,"column":6,"nodeType":"103","endLine":28,"endColumn":8,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"102","line":20,"column":5,"nodeType":"103","endLine":20,"endColumn":7,"suggestions":"108"},{"ruleId":"90","severity":1,"message":"109","line":23,"column":18,"nodeType":"92","messageId":"93","endLine":23,"endColumn":28},{"ruleId":"90","severity":1,"message":"110","line":27,"column":9,"nodeType":"92","messageId":"93","endLine":27,"endColumn":15},{"ruleId":"90","severity":1,"message":"111","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"112","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":5,"endColumn":13},{"ruleId":"90","severity":1,"message":"95","line":21,"column":10,"nodeType":"92","messageId":"93","endLine":21,"endColumn":18},{"ruleId":"90","severity":1,"message":"96","line":21,"column":20,"nodeType":"92","messageId":"93","endLine":21,"endColumn":31},{"ruleId":"90","severity":1,"message":"113","line":24,"column":10,"nodeType":"92","messageId":"93","endLine":24,"endColumn":21},{"ruleId":"90","severity":1,"message":"114","line":25,"column":10,"nodeType":"92","messageId":"93","endLine":25,"endColumn":14},{"ruleId":"90","severity":1,"message":"115","line":25,"column":16,"nodeType":"92","messageId":"93","endLine":25,"endColumn":23},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'alert' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allCategories'. Either include it or remove the dependency array. You can also do a functional update 'setAllCategories(a => ...)' if you only need 'allCategories' in the 'setAllCategories' call.","ArrayExpression",["118"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'uid' and 'verifyToken'. Either include them or remove the dependency array.",["119"],["120"],"'setPayment' is assigned a value but never used.","'onLoad' is assigned a value but never used.","'Redirect' is defined but never used.","'dashAvater' is defined but never used.","'courseCount' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"121","fix":"125"},"Update the dependencies array to be: [allCategories]",{"range":"126","text":"127"},"Update the dependencies array to be: [uid, verifyToken]",{"range":"128","text":"129"},{"range":"130","text":"127"},[926,928],"[allCategories]",[981,983],"[uid, verifyToken]",[806,808]]