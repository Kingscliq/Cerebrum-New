[{"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\index.js":"1","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js":"2","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\ViewCategories\\index.js":"3","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js":"4","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ForgotPassword\\index.js":"5","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\SignUp\\index.js":"6","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js":"7","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\ViewCourse\\index.js":"8","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js":"9","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\EmailVerify\\index.js":"10","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentOption\\index.js":"11","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Button\\index.js":"12","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ChangePassword\\index.js":"13","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js":"14","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js":"15","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Loader\\index.js":"16","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js":"17","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentFailed\\index.js":"18","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js":"19","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js":"20","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js":"21","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js":"22","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js":"23","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\assets\\images\\index.js":"24","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Footer\\index.js":"25","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\api\\index.js":"26","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ViewCourseElement\\index.js":"27","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Header\\Index.js":"28","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\AuthHeader\\index.js":"29","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js":"30","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ResetPassword\\index.js":"31"},{"size":408,"mtime":1612789774226,"results":"32","hashOfConfig":"33"},{"size":2247,"mtime":1612949194398,"results":"34","hashOfConfig":"33"},{"size":3497,"mtime":1612782398265,"results":"35","hashOfConfig":"33"},{"size":4638,"mtime":1612789774256,"results":"36","hashOfConfig":"33"},{"size":3110,"mtime":1612789775086,"results":"37","hashOfConfig":"33"},{"size":5273,"mtime":1612950266222,"results":"38","hashOfConfig":"33"},{"size":12000,"mtime":1612786213367,"results":"39","hashOfConfig":"33"},{"size":5594,"mtime":1612951406360,"results":"40","hashOfConfig":"33"},{"size":4695,"mtime":1612947443550,"results":"41","hashOfConfig":"33"},{"size":1049,"mtime":1611920944436,"results":"42","hashOfConfig":"33"},{"size":5055,"mtime":1612947220509,"results":"43","hashOfConfig":"33"},{"size":263,"mtime":1611658544558,"results":"44","hashOfConfig":"33"},{"size":1501,"mtime":1612446005921,"results":"45","hashOfConfig":"33"},{"size":1759,"mtime":1612446005930,"results":"46","hashOfConfig":"33"},{"size":660,"mtime":1612538591150,"results":"47","hashOfConfig":"33"},{"size":225,"mtime":1611658544573,"results":"48","hashOfConfig":"33"},{"size":1473,"mtime":1612355920376,"results":"49","hashOfConfig":"33"},{"size":1280,"mtime":1612538591387,"results":"50","hashOfConfig":"33"},{"size":4078,"mtime":1612789774478,"results":"51","hashOfConfig":"33"},{"size":13481,"mtime":1612789774244,"results":"52","hashOfConfig":"33"},{"size":869,"mtime":1611915703485,"results":"53","hashOfConfig":"33"},{"size":255,"mtime":1612948559857,"results":"54","hashOfConfig":"33"},{"size":3985,"mtime":1612789775257,"results":"55","hashOfConfig":"33"},{"size":1227,"mtime":1612789774030,"results":"56","hashOfConfig":"33"},{"size":1669,"mtime":1612538591315,"results":"57","hashOfConfig":"33"},{"size":3580,"mtime":1612950874694,"results":"58","hashOfConfig":"33"},{"size":709,"mtime":1612789774108,"results":"59","hashOfConfig":"33"},{"size":1204,"mtime":1612538591356,"results":"60","hashOfConfig":"33"},{"size":436,"mtime":1612789775336,"results":"61","hashOfConfig":"33"},{"size":4182,"mtime":1612949014745,"results":"62","hashOfConfig":"33"},{"size":4042,"mtime":1612948498992,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"rsinsr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\index.js",[],["137","138"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentSuccessful\\index.js",["139","140","141"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\ViewCategories\\index.js",["142"],"import React, { useState, useEffect } from \"react\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport { getAllCategories } from \"../../../api\";\r\nimport { BiMenuAltLeft } from \"react-icons/bi\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\nimport \"../Courses/Courses.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction ViewCategories() {\r\n\tconst [allCategories, setAllCategories] = useState([]);\r\n\tconst [seeCourses, setSeeCourses] = useState([]);\r\n\tconst [toggle, setToggle] = useState({ clicked: false });\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllCategories(allCategories, setAllCategories);\r\n\t\tsetAllCategories(allCategories);\r\n\t}, []);\r\n\r\n\tconst getCoursesInCategory = async (e) => {\r\n\t\tlet targetCategory = e.target.innerText;\r\n\t\taxios(`https://cerebrum-v1.herokuapp.com/api/category/course/${targetCategory}`).then((res) => {\r\n\t\t\tsetSeeCourses(res.data.data);\r\n\t\t\tconsole.log(seeCourses);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetToggle({ clicked: !toggle.clicked });\r\n\t};\r\n\t// console.log(allCourses);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DashboardHeader />\r\n\t\t\t<main className=\"container my-3 d-flex flex-row justify-content-between\">\r\n\t\t\t\t<div className=\"menu-icon m-2 h1\" onClick={handleClick}>\r\n\t\t\t\t\t{toggle.clicked ? <VscChromeClose /> : <BiMenuAltLeft />}\r\n\t\t\t\t</div>\r\n\t\t\t\t<aside className=\"col-lg-3 col-md-4\">\r\n\t\t\t\t\t<div className={toggle.clicked ? \"all-categories-active bg-white mb-2 p-4 rounded\" : `all-categories bg-white mb-2 p-4 rounded`}>\r\n\t\t\t\t\t\t<p className=\"signup-p all-courses-category-list\"> All Courses </p>\r\n\t\t\t\t\t\t<p className=\"signup-p all-courses-category-list\"> Recommended Courses </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={toggle.clicked ? \"all-categories-active bg-white p-4 rounded\" : \"all-categories bg-white p-4 rounded\"}>\r\n\t\t\t\t\t\t<ul className=\"courses-list\">\r\n\t\t\t\t\t\t\t<h1 className=\"signup-p fw-bold\"> Categories </h1> <hr />\r\n\t\t\t\t\t\t\t{allCategories.map((category) => (\r\n\t\t\t\t\t\t\t\t<li onClick={getCoursesInCategory} key={category._id} className=\"signup-p pb-3 all-courses-category-list\">\r\n\t\t\t\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</aside>\r\n\t\t\t\t<section className=\"col-lg-8 col-md-7\">\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<article className={toggle.clicked ? `d-none` : \"col-12 d-flex flex-row flex-wrap mb-3\"}>\r\n\t\t\t\t\t\t\t{seeCourses.map((course) => (\r\n\t\t\t\t\t\t\t\t<div key={course._id} className=\"bg-white all-courses-div d-flex flex-column border m-2 position-relative\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"courses-img\" src={course.image_url} width=\"100%\" height=\"75%\" alt=\"dispay\" />\r\n\r\n\t\t\t\t\t\t\t\t\t<p className=\"badge position-absolute courses-price-badge p-2\">\r\n\t\t\t\t\t\t\t\t\t\t{course.price > 0 ? `N ${course.price}` : (course.price = \"FREE\")}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<div className=\"w-100\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"bg-white rounded-circle courses-tutor-image-radius\" height=\"55px\" width=\"55px\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={course.tutor_id !== undefined ? course.tutor_id.image_url : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\theight=\"45px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"45px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"tutor pic\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"all-courses-link\" href={`/watchcourse/?id=${course._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"fw-bold signup-p mx-4 mt-3\">{course.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</section>\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport { ViewCategories };\r\n",["143","144"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Courses\\index.js",["145"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport { getAllCourses, getAllCategories } from \"../../../api\";\r\nimport { BiMenuAltLeft } from \"react-icons/bi\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\nimport \"./Courses.css\";\r\n\r\nfunction Courses() {\r\n  const [allCourses, setAllCourses] = useState([]);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllCourses().then((dataGotten) => {\r\n      setAllCourses(dataGotten);\r\n      console.log(dataGotten[0].tutor_id);\r\n    });\r\n\r\n    getAllCategories(allCategories, setAllCategories);\r\n    setAllCategories(allCategories);\r\n  }, []);\r\n\r\n  const [toggle, setToggle] = useState({ clicked: false });\r\n\r\n  const handleClick = () => {\r\n    setToggle({ clicked: !toggle.clicked });\r\n  };\r\n  console.log(allCourses);\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <main className=\"container my-3 d-flex flex-row justify-content-between\">\r\n        <div className=\"menu-icon m-2 h1\" onClick={handleClick}>\r\n          {toggle.clicked ? <VscChromeClose /> : <BiMenuAltLeft />}\r\n        </div>\r\n        <aside className=\"col-lg-3 col-md-4\">\r\n          <div\r\n            className={\r\n              toggle.clicked\r\n                ? \"all-categories-active bg-white mb-2 p-4 rounded\"\r\n                : `all-categories bg-white mb-2 p-4 rounded`\r\n            }\r\n          >\r\n            <p className=\"signup-p all-courses-category-list\"> All Courses </p>\r\n            <p className=\"signup-p all-courses-category-list\">\r\n              {\" \"}\r\n              Recommended Courses{\" \"}\r\n            </p>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggle.clicked\r\n                ? \"all-categories-active bg-white p-4 rounded\"\r\n                : \"all-categories bg-white p-4 rounded\"\r\n            }\r\n          >\r\n            <ul className=\"courses-list\">\r\n              <h1 className=\"signup-p fw-bold\"> Categories </h1> <hr />\r\n              {allCategories.map((category) => (\r\n                <li\r\n                  key={category._id}\r\n                  className=\"signup-p pb-3 all-courses-category-list\"\r\n                >\r\n                  {category.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </aside>\r\n        <section className=\"col-lg-8 col-md-7\">\r\n          <section>\r\n            <article\r\n              className={\r\n                toggle.clicked\r\n                  ? `d-none`\r\n                  : \"col-12 d-flex flex-row flex-wrap mb-3\"\r\n              }\r\n            >\r\n              {allCourses.map((course) => (\r\n                <div\r\n                  key={course._id}\r\n                  className=\"bg-white all-courses-div d-flex flex-column border m-2 position-relative\"\r\n                >\r\n                  <img\r\n                    className=\"courses-img\"\r\n                    src={course.image_url}\r\n                    width=\"100%\"\r\n                    height=\"75%\"\r\n                    alt=\"dispay\"\r\n                  />\r\n\r\n                  <p className=\"badge position-absolute courses-price-badge p-2\">\r\n                    {course.price > 0\r\n                      ? `N ${course.price}`\r\n                      : (course.price = \"FREE\")}\r\n                  </p>\r\n                  <div className=\"w-100\">\r\n                    <div\r\n                      className=\"bg-white rounded-circle courses-tutor-image-radius\"\r\n                      height=\"55px\"\r\n                      width=\"55px\"\r\n                    >\r\n                      <img\r\n                        className=\"rounded-circle\"\r\n                        src={\r\n                          course.tutor_id !== undefined\r\n                            ? course.tutor_id.image_url\r\n                            : \"\"\r\n                        }\r\n                        height=\"45px\"\r\n                        width=\"45px\"\r\n                        alt=\"tutor pic\"\r\n                      />\r\n                    </div>\r\n                    <a\r\n                      className=\"all-courses-link\"\r\n                      href={`/buycourse/?id=${course._id}`}\r\n                    >\r\n                      <p className=\"fw-bold signup-p mx-4 mt-3\">\r\n                        {course.name}\r\n                      </p>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </article>\r\n          </section>\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Courses };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ForgotPassword\\index.js",["146"],"/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\nimport { forgotPasswordImg } from \"../../../assets/images\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { Input } from \"../../../components/Input\";\r\nimport { AuthHeader } from \"../../../widgets/AuthHeader\";\r\nimport \"./ForgotPassword.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction ForgotPassWord() {\r\n  const [error, setError] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleForgotPassword = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `https://cerebrum-v1.herokuapp.com/api/auth/request-password-reset?email=${email}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSuccess(res.data.message);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err.response.data.message);\r\n        setError(err.response.data.message);\r\n        setSuccess(null);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <AuthHeader />\r\n      <main className=\"container-fluid vh-100 fpassword-section\">\r\n        <section className=\"row h-100\">\r\n          <div className=\"col-md-7 d-flex justify-content-center align-items-center\">\r\n            <div className=\"card shadow w-c\">\r\n              <form onSubmit={handleForgotPassword}>\r\n                <h2 className=\"fs-5\">Find Your Account</h2>\r\n                <hr className=\"mt-n5\" />\r\n                {error && (\r\n                  <div className=\"alert alert-danger\">\r\n                    <p>\r\n                      {/* We couldn’t find your account with that information. Please\r\n                      try inputting your correct email */}\r\n                      {error}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {success && (\r\n                  <div className=\"alert alert-success\">\r\n                    {/* We couldn’t find your account with that information. Please\r\n                    try inputting your correct email */}\r\n                    {success}\r\n                  </div>\r\n                )}\r\n                <Input\r\n                  type=\"text\"\r\n                  icon={<FaEnvelope />}\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={handleChange}\r\n                />\r\n                <Button\r\n                  className=\"btn btn-primary w-100\"\r\n                  text={\"Search\"}\r\n                  onClick={handleForgotPassword}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-5 h-100 signup-image d-none d-md-block\"\r\n            style={{\r\n              background: `url(${forgotPasswordImg})`,\r\n              backgroundRepeat: `no-repeat`,\r\n              backgroundSize: `cover`,\r\n            }}\r\n          ></div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\nexport { ForgotPassWord };\r\n",["147","148"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\SignUp\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TDashboard\\index.js",["149","150","151","152","153","154","155"],"/** @format */\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  dashAvater,\r\n  dashboardImg,\r\n  dashImg,\r\n  ellipsesvg1,\r\n  ellipsesvg2,\r\n} from \"../../../assets/images\";\r\nimport { CourseList } from \"../../../components/CourseList\";\r\nimport { DashboardHeader } from \"../../../widgets/DashboardHeader\";\r\nimport { Footer } from \"../../../widgets/Footer\";\r\nimport \"./TDashboard.css\";\r\nimport axios from \"axios\";\r\n\r\n// Api Call to get Authorized User\r\nconst TDashboard = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [role, setRole] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // const [dashimage, setDashimage] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  const [courseCount, setCourseCount] = useState(0);\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"userDetails\");\r\n    if (!data) {\r\n      window.open(\"/login\", \"_self\");\r\n    }\r\n    const user = JSON.parse(data);\r\n    const token = user.data.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    };\r\n    const userId = user.data.uid;\r\n    axios\r\n      .get(`https://cerebrum-v1.herokuapp.com/api/user/${userId}`, config)\r\n      .then((res) => {\r\n        console.log(\"res value\", res.data);\r\n        setUser(res.data.data);\r\n        setRole(res.data.data.role);\r\n      })\r\n      .catch((err) => {\r\n        window.open(\"/login\", \"_self\");\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.role === \"tutor\") {\r\n      // console.log(user);\r\n      axios\r\n        .get(`https://cerebrum-v1.herokuapp.com/api/tutor/course/${user._id}`)\r\n        .then((res) => {\r\n          setCourseCount(res.data.data.length);\r\n          setCourses(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err.response));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n      <section className='container container-fluid tdashboard'>\r\n        <div\r\n          className='row shadow mx-auto mt-4'\r\n          style={{\r\n            width: \"80%\",\r\n            borderRadius: \"15px\",\r\n          }}\r\n        >\r\n          <div className='col-md-8 align-items-center'>\r\n            <div className='card p-5 border-0'>\r\n              <div className='container'>\r\n                <header>\r\n                  <h1 className='font-bold'>Welcome {user.firstName}</h1>\r\n                </header>\r\n                <article>\r\n                  Welcome to your cerebrum Dashboard. Cerebrum provides you with\r\n                  boundless access to courses if you are a student and An\r\n                  opportunity to earn as a tutor\r\n                </article>\r\n                <div className='d-flex flex-wrap justify-content-start my-3'>\r\n                  {role === \"tutor\" ? (\r\n                    <>\r\n                      <button className='btn btn-primary'>\r\n                        <Link to='/dashboard/tutor/addcourse'>Add Course</Link>\r\n                      </button>\r\n                      <button className='btn btn-outline-primary mx-4'>\r\n                        <Link to='/logout'>Logout</Link>\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <button className='btn btn-primary text-light'>\r\n                        <Link\r\n                          to='/courses'\r\n                          // style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Buy Course\r\n                        </Link>\r\n                      </button>\r\n                      <button\r\n                        className='btn btn-outline-primary text-light'\r\n                        style={{ marginLeft: \"20px\" }}\r\n                      >\r\n                        <Link\r\n                          to='/logout'\r\n                          // style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className='col-md-4 align-items-center'> */}\r\n\r\n          <div className='col-4 d-none d-md-block d-flex align-items-center mt-5'>\r\n            <img\r\n              src={dashImg}\r\n              className='bg-warning rounded-circle shadow img-fluid'\r\n              alt='cerebrum'\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <section className='row my-4 mx-auto mt-5 gx-5 container'>\r\n          {role === \"learner\" ? (\r\n            <div className='col-md-6 card p-5 shadow mb-sm-5'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-md-6'>\r\n                  <img src={dashboardImg} alt='' />\r\n                </div>\r\n                <div className='col-md-6'>\r\n                  <h1 className='font-bold'>Code 101: Codeology</h1>\r\n                  <p>By {user.lastName}</p>\r\n                  <p>\r\n                    Lorem ipsum, or lipsum as it is sometimes known, is dummy\r\n                    text used in laying out print, graphic or web designs.\r\n                  </p>\r\n                  <p>\r\n                    <button className='btn-warning text-light'>\r\n                      Continue Course\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className='col-md-6 card py-5 shadow'>\r\n              {courses.length > 0 ? (\r\n                <>\r\n                  <div className='row align-items-center'>\r\n                    {courses.map((course, index) => (\r\n                      <>\r\n                        <CourseList\r\n                          courseName={course.name}\r\n                          courseDesc={course.description}\r\n                          courseImg={course.image_url}\r\n                          key={index}\r\n                        />\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className='d-flex align-items-center justify-content-center mt-5'>\r\n                    <h1>No Courses Uploaded Yet</h1>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n          {/* <div className='col-md-1'>&nbsp;</div> */}\r\n          <div className='col-md-6'>\r\n            {/* metrics d-flex flex-wrap flex-column */}\r\n            {role === \"tutor\" ? (\r\n              <>\r\n                {/* Render If Role is Tutor */}\r\n                <div className='card py-4 h-60 shadow mb-3'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      {/* mx-auto justify-items-between */}\r\n                      <div className='col-md-6'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No of Course Uploaded</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex justify-content-center align-item-center'>\r\n                          <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card p-4 h-60 shadow'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div>\r\n                          {role === \"tutor\" || courses.length > 0 ? (\r\n                            <>\r\n                              <h1\r\n                                style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                                className='text-primary text-center'\r\n                              >\r\n                                {courses.length}\r\n                              </h1>\r\n                              <p className='text-center'>Courses Uploaded</p>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {/* Render if role is Student */}\r\n                              <h1\r\n                                style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                                className='text-primary text-center'\r\n                              >\r\n                                {courses.length}\r\n                              </h1>\r\n                              <p className='text-center'>\r\n                                No Student Registered Yet\r\n                              </p>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className='card py-4 h-60 shadow mb-3'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      {/* mx-auto justify-items-between */}\r\n                      <div className='col-md-6'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No Course Enrolled Yet</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg1} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card p-4 h-60 shadow'>\r\n                  <div className='container'>\r\n                    <div className='row'>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div>\r\n                          <h1\r\n                            style={{ fontSize: \"50px\", fontWeight: \"600\" }}\r\n                            className='text-primary text-center'\r\n                          >\r\n                            0\r\n                          </h1>\r\n                          <p className='text-center'>No Course Completed Yet</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6 col-sm-12'>\r\n                        <div className='d-flex align-item-center justify-content-center'>\r\n                          <img src={ellipsesvg2} alt='ellipse svg images' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n  // } else {\r\n  // return <Redirect to='/login' />;\r\n  // }\r\n};\r\nexport { TDashboard };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\ViewCourse\\index.js",["156","157","158","159","160","161"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\BuyCourse\\index.js",["162","163","164","165","166"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\EmailVerify\\index.js",["167","168"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst EmailVerify = () => {\r\n  let url_string = window.location.href;\r\n  let url = new URL(url_string);\r\n  let url_params_uid = url.searchParams.get(\"uid\");\r\n  const url_params_verifyToken = url.searchParams.get(\"verifyToken\");\r\n  const uid = url_params_uid;\r\n  const verifyToken = url_params_verifyToken;\r\n  console.log(uid, verifyToken);\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        `https://cerebrum-v1.herokuapp.com/api/auth/verify-email/?uid=${uid}&verifyToken=${verifyToken}`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.message === \"Email verified successfully\") {\r\n          window.open(\"/login?msg=success\", \"_self\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // if (err.response.data.message === \"Email is already verified\") {\r\n        //   window.open(\"/login?msg=verified\", \"_self\");\r\n        console.log(err.response);\r\n      });\r\n  }, []);\r\n\r\n  return <div>&nbsp;</div>;\r\n};\r\n\r\nexport { EmailVerify };\r\n",["169","170"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentOption\\index.js",["171","172","173"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Button\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ChangePassword\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\PaymentInformation\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Input\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\Loader\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\CourseList\\index.js",["174"],"/** @format */\r\n\r\nimport React from \"react\";\r\nimport { dashAvater } from \"../../assets/images\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport \"./CourseList.css\";\r\nconst CourseList = ({ courseName, courseImg, courseDesc }) => {\r\n  return (\r\n    <div>\r\n      <section className='courselist m-2'>\r\n        <article className='card'>\r\n          <div className='container'>\r\n            {/* <div className='d-flex align-item-start justify-content-between'> */}\r\n            <div className='row'>\r\n              <div className='col-md-10'>\r\n                <div className='row'>\r\n                  <div className='col-2'>\r\n                    <img\r\n                      src={courseImg}\r\n                      style={{ borderRadius: \"5px\" }}\r\n                      alt=''\r\n                      height='30px'\r\n                      width='30px'\r\n                    />\r\n                  </div>\r\n                  <div className='col-1'>&nbsp;</div>\r\n                  <div className='col-8'>\r\n                    <h6 className='p-0 m-0 font-bold'>{courseName}</h6>\r\n                    {courseDesc}\r\n                    {/* <p>30 courses+</p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='text-primary col-2'>\r\n                <BsThreeDotsVertical />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CourseList };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\PaymentFailed\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\LandingPage\\index.js",["175","176","177"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\AddCourses\\index.js",["178"],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\TutorAddCourse\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\app\\Logout\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\VerifyEmail\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\assets\\images\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Footer\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\api\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\components\\ViewCourseElement\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\Header\\Index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\widgets\\AuthHeader\\index.js",[],"C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\Login\\index.js",["179","180","181","182","183","184"],"/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginImg } from \"../../../assets/images\";\r\nimport { Input } from \"../../../components/Input\";\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\r\nimport { Button } from \"../../../components/Button\";\r\nimport { useState } from \"react\";\r\nimport { Loader } from \"../../../components/Loader\";\r\nimport { signIn } from \"../../../api\";\r\nimport \"./Login.css\";\r\nimport { AuthHeader } from \"../../../widgets/AuthHeader\";\r\n\r\nconst Login = () => {\r\n  // console.log(\"propoooooooops\", props);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [alert, setAlert] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  // const [statusAlert, setStatusAlert] = useState(null);\r\n  useEffect(() => {\r\n    let url_string = window.location.href;\r\n    let url = new URL(url_string);\r\n    let verify_msg = url.searchParams.get(\"msg\");\r\n\r\n    let statusAlert;\r\n    if (verify_msg === \"success\") {\r\n      setAlert(\"Your Email has been Successfully Verified\");\r\n    } else if (verify_msg === \"verify\") {\r\n      setAlert(\r\n        \"Email has already been verified, You can login to your Dashboard\"\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setUser({ ...user, [e.target.name]: value });\r\n  };\r\n\r\n  // Function to Handle Login Submit\r\n  const handleSubmit = (e) => {\r\n    // Call Api Function\r\n\r\n    signIn(e, user, setUser, setLoading, setError, setSuccess);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthHeader />\r\n      <main className='vh-100 container-fluid login-section'>\r\n        <section className='row h-100'>\r\n          <div className='col-md-7 d-flex justify-content-center align-items-center col-sm-12'>\r\n            <div className='card shadow w-c'>\r\n              {/* {error === \"invalid username or password\" ? (\r\n                <div className='alert alert-danger'>{error}</div>\r\n              ) : null} */}\r\n\r\n              {error && <div className='alert alert-danger'>{error}</div>}\r\n              {success && <div className='alert alert-success'>{success}</div>}\r\n              {alert ? (\r\n                <div className={`alert alert-success`}>{alert}</div>\r\n              ) : null}\r\n\r\n              <form onSubmit={handleSubmit}>\r\n                <h2 className='text-left'>Log In</h2>\r\n                <hr className='mt-n5' />\r\n                <Input\r\n                  type='email'\r\n                  icon={<FaEnvelope />}\r\n                  placeholder='Enter Email'\r\n                  onChange={handleChange}\r\n                  value={user.email}\r\n                  name='email'\r\n                />\r\n                <Input\r\n                  type='password'\r\n                  icon={<FaLock />}\r\n                  placeholder='Enter Password'\r\n                  onChange={handleChange}\r\n                  value={user.password}\r\n                  name='password'\r\n                />\r\n                <p className='signup-p'>\r\n                  <span>\r\n                    <Link to='/auth/forgotpassword'>Forgot Password</Link>\r\n                  </span>\r\n                </p>\r\n                <Button\r\n                  className='btn btn-primary w-100'\r\n                  text='Login'\r\n                  loadingIcon={loading && <Loader />}\r\n                />\r\n                <hr />\r\n                <p className='signup-p'>\r\n                  New Member?{\" \"}\r\n                  <span>\r\n                    <Link to='/auth/signup'>Sign Up</Link>\r\n                  </span>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className='col-5 h-100 signup-image d-none d-md-block'\r\n            style={{\r\n              background: `url(${loginImg})`,\r\n              backgroundRepeat: `no-repeat`,\r\n              backgroundSize: `cover`,\r\n            }}\r\n          ></div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nexport { Login };\r\n","C:\\Users\\kingsley\\Desktop\\cerebrum\\Cerebrum-New\\src\\pages\\auth\\ResetPassword\\index.js",["185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":3,"column":17,"nodeType":"192","messageId":"193","endLine":3,"endColumn":26},{"ruleId":"190","severity":1,"message":"194","line":12,"column":10,"nodeType":"192","messageId":"193","endLine":12,"endColumn":23},{"ruleId":"190","severity":1,"message":"195","line":12,"column":25,"nodeType":"192","messageId":"193","endLine":12,"endColumn":41},{"ruleId":"196","severity":1,"message":"197","line":18,"column":5,"nodeType":"198","endLine":18,"endColumn":7,"suggestions":"199"},{"ruleId":"186","replacedBy":"200"},{"ruleId":"188","replacedBy":"201"},{"ruleId":"196","severity":1,"message":"197","line":23,"column":6,"nodeType":"198","endLine":23,"endColumn":8,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"203","line":18,"column":11,"nodeType":"192","messageId":"193","endLine":18,"endColumn":16},{"ruleId":"186","replacedBy":"204"},{"ruleId":"188","replacedBy":"205"},{"ruleId":"190","severity":1,"message":"206","line":2,"column":16,"nodeType":"192","messageId":"193","endLine":2,"endColumn":24},{"ruleId":"190","severity":1,"message":"207","line":5,"column":3,"nodeType":"192","messageId":"193","endLine":5,"endColumn":13},{"ruleId":"190","severity":1,"message":"208","line":21,"column":10,"nodeType":"192","messageId":"193","endLine":21,"endColumn":18},{"ruleId":"190","severity":1,"message":"209","line":21,"column":20,"nodeType":"192","messageId":"193","endLine":21,"endColumn":31},{"ruleId":"190","severity":1,"message":"210","line":24,"column":10,"nodeType":"192","messageId":"193","endLine":24,"endColumn":21},{"ruleId":"190","severity":1,"message":"211","line":25,"column":10,"nodeType":"192","messageId":"193","endLine":25,"endColumn":14},{"ruleId":"190","severity":1,"message":"212","line":25,"column":16,"nodeType":"192","messageId":"193","endLine":25,"endColumn":23},{"ruleId":"190","severity":1,"message":"213","line":16,"column":20,"nodeType":"192","messageId":"193","endLine":16,"endColumn":31},{"ruleId":"190","severity":1,"message":"214","line":17,"column":10,"nodeType":"192","messageId":"193","endLine":17,"endColumn":21},{"ruleId":"196","severity":1,"message":"215","line":35,"column":6,"nodeType":"198","endLine":35,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":80,"column":35,"nodeType":"219","messageId":"220","endLine":80,"endColumn":37},{"ruleId":"217","severity":1,"message":"218","line":88,"column":35,"nodeType":"219","messageId":"220","endLine":88,"endColumn":37},{"ruleId":"217","severity":1,"message":"218","line":95,"column":32,"nodeType":"219","messageId":"220","endLine":95,"endColumn":34},{"ruleId":"190","severity":1,"message":"221","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":19},{"ruleId":"190","severity":1,"message":"222","line":6,"column":10,"nodeType":"192","messageId":"193","endLine":6,"endColumn":25},{"ruleId":"190","severity":1,"message":"223","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":17},{"ruleId":"190","severity":1,"message":"224","line":11,"column":19,"nodeType":"192","messageId":"193","endLine":11,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":54,"column":27,"nodeType":"227","messageId":"228","endLine":54,"endColumn":29},{"ruleId":"190","severity":1,"message":"229","line":3,"column":17,"nodeType":"192","messageId":"193","endLine":3,"endColumn":25},{"ruleId":"196","severity":1,"message":"230","line":28,"column":6,"nodeType":"198","endLine":28,"endColumn":8,"suggestions":"231"},{"ruleId":"186","replacedBy":"232"},{"ruleId":"188","replacedBy":"233"},{"ruleId":"190","severity":1,"message":"222","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":25},{"ruleId":"190","severity":1,"message":"234","line":16,"column":10,"nodeType":"192","messageId":"193","endLine":16,"endColumn":13},{"ruleId":"190","severity":1,"message":"235","line":16,"column":15,"nodeType":"192","messageId":"193","endLine":16,"endColumn":21},{"ruleId":"190","severity":1,"message":"207","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":37,"column":13,"nodeType":"238","endLine":41,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":76,"column":17,"nodeType":"238","endLine":76,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":84,"column":15,"nodeType":"238","endLine":84,"endColumn":61},{"ruleId":"236","severity":1,"message":"237","line":328,"column":17,"nodeType":"238","endLine":328,"endColumn":75},{"ruleId":"190","severity":1,"message":"239","line":4,"column":16,"nodeType":"192","messageId":"193","endLine":4,"endColumn":26},{"ruleId":"190","severity":1,"message":"208","line":21,"column":10,"nodeType":"192","messageId":"193","endLine":21,"endColumn":18},{"ruleId":"190","severity":1,"message":"209","line":21,"column":20,"nodeType":"192","messageId":"193","endLine":21,"endColumn":31},{"ruleId":"190","severity":1,"message":"240","line":22,"column":10,"nodeType":"192","messageId":"193","endLine":22,"endColumn":15},{"ruleId":"190","severity":1,"message":"241","line":23,"column":10,"nodeType":"192","messageId":"193","endLine":23,"endColumn":17},{"ruleId":"190","severity":1,"message":"242","line":32,"column":9,"nodeType":"192","messageId":"193","endLine":32,"endColumn":20},{"ruleId":"190","severity":1,"message":"243","line":23,"column":19,"nodeType":"192","messageId":"193","endLine":23,"endColumn":29},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'paymentStatus' is assigned a value but never used.","'setPaymentStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allCategories'. Either include it or remove the dependency array. You can also do a functional update 'setAllCategories(a => ...)' if you only need 'allCategories' in the 'setAllCategories' call.","ArrayExpression",["246"],["244"],["245"],["247"],"'value' is assigned a value but never used.",["244"],["245"],"'Redirect' is defined but never used.","'dashAvater' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'courseCount' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setCourseId' is assigned a value but never used.","'watchCourse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["248"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaWindows' is defined but never used.","'dummyVideoImage' is defined but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'uid' and 'verifyToken'. Either include them or remove the dependency array.",["249"],["244"],["245"],"'buy' is assigned a value but never used.","'setBuy' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useHistory' is defined but never used.","'error' is assigned a value but never used.","'success' is assigned a value but never used.","'statusAlert' is defined but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [allCategories]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [courseId]",{"range":"260","text":"261"},"Update the dependencies array to be: [uid, verifyToken]",{"range":"262","text":"263"},[702,704],"[allCategories]",[772,774],[1124,1126],"[courseId]",[981,983],"[uid, verifyToken]"]